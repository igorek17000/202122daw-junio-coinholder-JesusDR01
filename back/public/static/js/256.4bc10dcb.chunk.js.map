{"version":3,"file":"static/js/256.4bc10dcb.chunk.js","mappings":"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,OAAO,SAAS,EAAmB,GAE9C,OAAO,EAAO,KAAK,EAAU,KAAK,WAAW,KAAK,GAAY,WAAW,KAAK,GAAa,MAGhF,aAAa,SACxB,EACA,EACA,GAKA,GAAyB,KAArB,EAAU,QAAsC,KAArB,EAAU,OACvC,MAAM,IAAI,WAAW,gCAIvB,GAA0B,KAAtB,EAAW,OACb,MAAM,IAAI,WAAW,iCAGvB,OAAO,EAAO,KACZ,EAAY,WAAW,WAAW,KAAK,GAAY,WAAW,KAAK,GAAa,gHClZpF,IAAM,EAAmC,EAAO,KAAK,CAEnD,GACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGI,EAAqC,EAAO,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GA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","sources":["../node_modules/@ethereumjs/common/src/chains/index.ts","../node_modules/@ethereumjs/common/src/eips/index.ts","../node_modules/@ethereumjs/common/src/hardforks/index.ts","../node_modules/@ethereumjs/common/src/index.ts","../node_modules/@ethereumjs/common/node_modules/bn.js/lib/bn.js","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/account.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/address.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/bytes.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/constants.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/externals.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/hash.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/helpers.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/index.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/internal.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/object.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/signature.ts","../node_modules/@ethereumjs/common/node_modules/ethereumjs-util/src/types.ts","../node_modules/@ethereumjs/tx/src/baseTransaction.ts","../node_modules/@ethereumjs/tx/src/eip1559Transaction.ts","../node_modules/@ethereumjs/tx/src/eip2930Transaction.ts","../node_modules/@ethereumjs/tx/src/index.ts","../node_modules/@ethereumjs/tx/src/legacyTransaction.ts","../node_modules/@ethereumjs/tx/src/transactionFactory.ts","../node_modules/@ethereumjs/tx/src/types.ts","../node_modules/@ethereumjs/tx/src/util.ts","../node_modules/@ethereumjs/tx/node_modules/bn.js/lib/bn.js","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/account.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/address.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/bytes.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/constants.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/externals.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/hash.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/helpers.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/index.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/internal.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/object.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/signature.ts","../node_modules/@ethereumjs/tx/node_modules/ethereumjs-util/src/types.ts","../node_modules/@metamask/eth-sig-util/src/encryption.ts","../node_modules/@metamask/eth-sig-util/src/index.ts","../node_modules/@metamask/eth-sig-util/src/personal-sign.ts","../node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts","../node_modules/@metamask/eth-sig-util/src/utils.ts","../../src/account.ts","../../src/bytes.ts","../../src/constants.ts","../../src/hash.ts","../../src/index.ts","../../src/object.ts","../../src/secp256k1v3-adapter.ts","../../../src/secp256k1v3-lib/der.ts","../../../src/secp256k1v3-lib/index.ts","../../src/signature.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts","../node_modules/@web3auth/ethereum-provider/src/rpc/jrpcClient.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/converter.ts","../node_modules/@web3auth/ethereum-provider/src/providers/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts","../node_modules/@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts","../node_modules/@web3auth/ethereum-provider/node_modules/bn.js/lib/bn.js","../../src/classes.ts","../../src/error-constants.ts","../../src/errors.ts","../../src/utils.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/account.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/address.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/bytes.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/constants.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/externals.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/hash.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/helpers.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/index.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/internal.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/object.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/signature.ts","../node_modules/@web3auth/ethereum-provider/node_modules/ethereumjs-util/src/types.ts","../node_modules/crc-32/crc32.js","../node_modules/tweetnacl-util/nacl-util.js"],"sourcesContent":["import { Chain, chainsType } from './../types'\nimport mainnet from './mainnet.json'\nimport ropsten from './ropsten.json'\nimport rinkeby from './rinkeby.json'\nimport kovan from './kovan.json'\nimport goerli from './goerli.json'\nimport sepolia from './sepolia.json'\n\n/**\n * @hidden\n */\nexport function _getInitializedChains(customChains?: Chain[]) {\n  const names: any = {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '5': 'goerli',\n    '11155111': 'sepolia',\n  }\n  const chains: any = {\n    mainnet,\n    ropsten,\n    rinkeby,\n    kovan,\n    goerli,\n    sepolia,\n  }\n  if (customChains) {\n    for (const chain of customChains) {\n      const name = chain.name\n      names[chain.chainId.toString()] = name\n      chains[name] = chain\n    }\n  }\n\n  chains['names'] = names\n  return chains\n}\n\n/**\n * @deprecated this constant will be internalized (removed)\n * on next major version update\n */\nexport const chains: chainsType = _getInitializedChains()\n","import { eipsType } from './../types'\n\nexport const EIPs: eipsType = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n}\n","export const hardforks = [\n  ['chainstart', require('./chainstart.json')],\n  ['homestead', require('./homestead.json')],\n  ['dao', require('./dao.json')],\n  ['tangerineWhistle', require('./tangerineWhistle.json')],\n  ['spuriousDragon', require('./spuriousDragon.json')],\n  ['byzantium', require('./byzantium.json')],\n  ['constantinople', require('./constantinople.json')],\n  ['petersburg', require('./petersburg.json')],\n  ['istanbul', require('./istanbul.json')],\n  ['muirGlacier', require('./muirGlacier.json')],\n  ['berlin', require('./berlin.json')],\n  ['london', require('./london.json')],\n  ['shanghai', require('./shanghai.json')],\n  ['arrowGlacier', require('./arrowGlacier.json')],\n  ['mergeForkIdTransition', require('./mergeForkIdTransition.json')],\n  ['merge', require('./merge.json')],\n]\n","import { EventEmitter } from 'events'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { BN, BNLike, toType, TypeOutput, intToBuffer } from 'ethereumjs-util'\nimport { _getInitializedChains } from './chains'\nimport { hardforks as HARDFORK_CHANGES } from './hardforks'\nimport { EIPs } from './eips'\nimport {\n  BootstrapNode,\n  Chain as IChain,\n  GenesisBlock,\n  GenesisState,\n  Hardfork as HardforkParams,\n} from './types'\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n\nexport enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Kovan = 42,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  Shanghai = 'shanghai',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\ninterface BaseOpts {\n  /**\n   * String identifier ('byzantium') for hardfork or {@link Hardfork} enum.\n   *\n   * Default: Hardfork.Istanbul\n   */\n  hardfork?: string | Hardfork\n  /**\n   * Limit parameter returns to the given hardforks\n   */\n  supportedHardforks?: Array<string | Hardfork>\n  /**\n   * Selected EIPs which can be activated, please use an array for instantiation\n   * (e.g. `eips: [ 2537, ]`)\n   *\n   * Currently supported:\n   *\n   * - [EIP-2537](https://eips.ethereum.org/EIPS/eip-2537) - BLS12-381 precompiles\n   */\n  eips?: number[]\n}\n\n/**\n * Options for instantiating a {@link Common} instance.\n */\nexport interface CommonOpts extends BaseOpts {\n  /**\n   * Chain name ('mainnet'), id (1), or {@link Chain} enum,\n   * either from a chain directly supported or a custom chain\n   * passed in via {@link CommonOpts.customChains}.\n   */\n  chain: string | number | Chain | BN | object\n  /**\n   * Initialize (in addition to the supported chains) with the selected\n   * custom chains\n   *\n   * Usage (directly with the respective chain intialization via the {@link CommonOpts.chain} option):\n   *\n   * Pattern 1 (without genesis state):\n   *\n   * ```javascript\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ myCustomChain1 ]})\n   * ```\n   *\n   * Pattern 2 (with genesis state see {@link GenesisState} for format):\n   *\n   * ```javascript\n   * const simpleState = {\n   *   '0x0...01': '0x100', // For EoA\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * import chain1GenesisState from '[PATH_TO_GENESIS_STATES]/chain1GenesisState.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, simpleState ] ]})\n   * ```\n   *\n   * Pattern 3 (with complex genesis state, containing contract accounts and storage).\n   * Note that in {@link AccountState} there are two\n   * accepted types. This allows to easily insert accounts in the genesis state:\n   *\n   * A complex genesis state with Contract and EoA states would have the following format:\n   *\n   * ```javascript\n   * const complexState = {\n   *   '0x0...01': '0x100', // For EoA\n   *   '0x0...02': ['0x1', '0xRUNTIME_BYTECODE', [[ keyOne, valueOne ], [ keyTwo, valueTwo ]]] // For contracts\n   * }\n   * import myCustomChain1 from '[PATH_TO_MY_CHAINS]/myCustomChain1.json'\n   * const common = new Common({ chain: 'myCustomChain1', customChains: [ [ myCustomChain1, complexState ] ]})\n   * ```\n   */\n  customChains?: IChain[] | [IChain, GenesisState][]\n}\n\n/**\n * Options to be used with the {@link Common.custom} static constructor.\n */\nexport interface CustomCommonOpts extends BaseOpts {\n  /**\n   * The name (`mainnet`), id (`1`), or {@link Chain} enum of\n   * a standard chain used to base the custom chain params on.\n   */\n  baseChain?: string | number | Chain | BN\n}\n\ninterface hardforkOptions {\n  /** optional, only allow supported HFs (default: false) */\n  onlySupported?: boolean\n  /** optional, only active HFs (default: false) */\n  onlyActive?: boolean\n}\n\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport default class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: IChain\n  private _hardfork: string | Hardfork\n  private _supportedHardforks: Array<string | Hardfork> = []\n  private _eips: number[] = []\n  private _customChains: IChain[] | [IChain, GenesisState][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<IChain> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n   * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n   *\n   * @deprecated Use {@link Common.custom} instead\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  static forCustomChain(\n    baseChain: string | number | Chain,\n    customChainParams: Partial<IChain>,\n    hardfork?: string | Hardfork,\n    supportedHardforks?: Array<string | Hardfork>\n  ): Common {\n    const standardChainParams = Common._getChainParams(baseChain)\n\n    return new Common({\n      chain: {\n        ...standardChainParams,\n        ...customChainParams,\n      },\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks,\n    })\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId BN id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: BN): boolean {\n    const initializedChains: any = _getInitializedChains()\n    return Boolean(initializedChains['names'][chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | BN,\n    customChains?: IChain[]\n  ): IChain {\n    const initializedChains: any = _getInitializedChains(customChains)\n    if (typeof chain === 'number' || BN.isBN(chain)) {\n      chain = chain.toString()\n\n      if (initializedChains['names'][chain]) {\n        const name: string = initializedChains['names'][chain]\n        return initializedChains[name]\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain]) {\n      return initializedChains[chain]\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  /**\n   *\n   * @constructor\n   */\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Istanbul\n    for (const hf of this._chainParams.hardforks) {\n      if (!hf.forkHash) {\n        hf.forkHash = this._calcForkHash(hf.name)\n      }\n    }\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.supportedHardforks) {\n      this._supportedHardforks = opts.supportedHardforks\n    }\n    if (opts.hardfork) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | BN | object): any {\n    if (typeof chain === 'number' || typeof chain === 'string' || BN.isBN(chain)) {\n      // Filter out genesis states if passed in to customChains\n      let plainCustomChains: IChain[]\n      if (\n        this._customChains &&\n        this._customChains.length > 0 &&\n        Array.isArray(this._customChains[0])\n      ) {\n        plainCustomChains = (this._customChains as [IChain, GenesisState][]).map((e) => e[0])\n      } else {\n        plainCustomChains = this._customChains as IChain[]\n      }\n      this._chainParams = Common._getChainParams(chain, plainCustomChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or BN when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if ((<any>chain)[param] === undefined) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as IChain\n    } else {\n      throw new Error('Wrong input format')\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    let existing = false\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    td = toType(td, TypeOutput.BN)\n\n    let hardfork = Hardfork.Chainstart\n    let minTdHF\n    let maxTdHF\n    let previousHF\n    for (const hf of this.hardforks()) {\n      // Skip comparison for not applied HFs\n      if (hf.block === null) {\n        if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n          if (td.gte(new BN(hf.td))) {\n            return hf.name\n          }\n        }\n        continue\n      }\n      if (blockNumber.gte(new BN(hf.block))) {\n        hardfork = hf.name as Hardfork\n      }\n      if (td && hf.td) {\n        if (td.gte(new BN(hf.td))) {\n          minTdHF = hf.name\n        } else {\n          maxTdHF = previousHF\n        }\n      }\n      previousHF = hf.name\n    }\n    if (td) {\n      let msgAdd = `block number: ${blockNumber} (-> ${hardfork}), `\n      if (minTdHF) {\n        if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n          const msg = 'HF determined by block number is lower than the minimum total difficulty HF'\n          msgAdd += `total difficulty: ${td} (-> ${minTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n      if (maxTdHF) {\n        if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n          const msg = 'Maximum HF determined by total difficulty is lower than the block number HF'\n          msgAdd += `total difficulty: ${td} (-> ${maxTdHF})`\n          throw new Error(`${msg}: ${msgAdd}`)\n        }\n      }\n    }\n    return hardfork\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(blockNumber: BNLike, td?: BNLike): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n  _chooseHardfork(hardfork?: string | Hardfork | null, onlySupported: boolean = true): string {\n    if (!hardfork) {\n      hardfork = this._hardfork\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(`Hardfork ${hardfork} not set as supported in supportedHardforks`)\n    }\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n  _getHardfork(hardfork: string | Hardfork): any {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    throw new Error(`Hardfork ${hardfork} not defined for chain ${this.chainName()}`)\n  }\n\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n  _isSupportedHardfork(hardfork: string | Hardfork | null): boolean {\n    if (this._supportedHardforks.length > 0) {\n      for (const supportedHf of this._supportedHardforks) {\n        if (hardfork === supportedHf) return true\n      }\n    } else {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs) {\n        ;(EIPs[eip].requiredEIPs as number[]).forEach((elem) => {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        })\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n  param(topic: string, name: string): any {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value = null\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== null) {\n        return value\n      }\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): any {\n    hardfork = this._chooseHardfork(hardfork)\n\n    let value = null\n    for (const hfChanges of HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = valueEIP !== null ? valueEIP : value\n        }\n        // Paramater-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (!hfChanges[1][topic]) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): any {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return null\n    }\n    const value = eipParams[topic][name].v\n    return value\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n  paramByBlock(topic: string, name: string, blockNumber: BNLike): any {\n    const activeHfs = this.activeHardforks(blockNumber)\n    const hardfork = activeHfs[activeHfs.length - 1]['name']\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if (hf['eips'].includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(\n    hardfork: string | Hardfork | null,\n    blockNumber: BNLike,\n    opts: hardforkOptions = {}\n  ): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock && blockNumber.gte(hfBlock)) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BNLike, opts?: hardforkOptions): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(\n    hardfork1: string | Hardfork | null,\n    hardfork2: string | Hardfork,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported)\n\n    let hardforks\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts)\n    } else {\n      hardforks = this.hardforks()\n    }\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork, opts?: hardforkOptions): boolean {\n    return this.hardforkGteHardfork(null, hardfork, opts)\n  }\n\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n  hardforkIsActiveOnChain(\n    hardfork?: string | Hardfork | null,\n    opts: hardforkOptions = {}\n  ): boolean {\n    const onlySupported = opts.onlySupported ?? false\n    hardfork = this._chooseHardfork(hardfork, onlySupported)\n    for (const hf of this.hardforks()) {\n      if (hf['name'] === hardfork && hf['block'] !== null) return true\n    }\n    return false\n  }\n\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n  activeHardforks(blockNumber?: BNLike | null, opts: hardforkOptions = {}): HardforkParams[] {\n    const activeHardforks: HardforkParams[] = []\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['block'] === null) continue\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue\n\n      activeHardforks.push(hf)\n    }\n    return activeHardforks\n  }\n\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n  activeHardfork(blockNumber?: BNLike | null, opts: hardforkOptions = {}): string {\n    const activeHardforks = this.activeHardforks(blockNumber, opts)\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name']\n    } else {\n      throw new Error(`No (supported) active hardfork found`)\n    }\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n   */\n  hardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.hardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this._getHardfork(hardfork)['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return new BN(block)\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTD(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const td = this._getHardfork(hardfork)['td']\n    if (td === undefined || td === null) {\n      return null\n    }\n    return new BN(td)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const block = this.hardforkBlockBN(hardfork)\n    return block ? block.eq(blockNumber) : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): number | null {\n    const block = this.nextHardforkBlockBN(hardfork)\n    return toType(block, TypeOutput.Number)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n  nextHardforkBlockBN(hardfork?: string | Hardfork): BN | null {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const hfBlock = this.hardforkBlockBN(hardfork)\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: BN | null, hf: HardforkParams) => {\n      const block = new BN(hf.block!)\n      return block.gt(hfBlock) && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n  isNextHardforkBlock(blockNumber: BNLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BN)\n    hardfork = this._chooseHardfork(hardfork, false)\n    const nextHardforkBlock = this.nextHardforkBlockBN(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber)\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork) {\n    const genesis = Buffer.from(this.genesis().hash.substr(2), 'hex')\n\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlock = 0\n    for (const hf of this.hardforks()) {\n      const block = hf.block\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same block number HFs\n      if (block !== 0 && block !== null && block !== prevBlock) {\n        const hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n      }\n\n      if (hf.name === hardfork) break\n      if (block !== null) {\n        prevBlock = block\n      }\n    }\n    const inputBuffer = Buffer.concat([genesis, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n  forkHash(hardfork?: string | Hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false)\n    const data = this._getHardfork(hardfork)\n    if (data['block'] === null && data['td'] === undefined) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash']\n    }\n    return this._calcForkHash(hardfork)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): any | null {\n    const resArray = this.hardforks().filter((hf: any) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlock {\n    return this._chainParams['genesis']\n  }\n\n  /**\n   * Returns the Genesis state of the current chain,\n   * all values are provided as hex-prefixed strings.\n   */\n  genesisState(): GenesisState {\n    // Use require statements here in favor of import statements\n    // to load json files on demand\n    // (high memory usage by large mainnet.json genesis state file)\n    switch (this.chainName()) {\n      case 'mainnet':\n        return require('./genesisStates/mainnet.json')\n      case 'ropsten':\n        return require('./genesisStates/ropsten.json')\n      case 'rinkeby':\n        return require('./genesisStates/rinkeby.json')\n      case 'kovan':\n        return require('./genesisStates/kovan.json')\n      case 'goerli':\n        return require('./genesisStates/goerli.json')\n      case 'sepolia':\n        return require('./genesisStates/sepolia.json')\n    }\n\n    // Custom chains with genesis state provided\n    if (\n      this._customChains &&\n      this._customChains.length > 0 &&\n      Array.isArray(this._customChains[0])\n    ) {\n      for (const chainArrayWithGenesis of this._customChains as [IChain, GenesisState][]) {\n        if (chainArrayWithGenesis[0].name === this.chainName()) {\n          return chainArrayWithGenesis[1]\n        }\n      }\n    }\n\n    return {}\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkParams[] {\n    return this._chainParams['hardforks']\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNode[] {\n    return this._chainParams['bootstrapNodes']\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams['dnsNetworks']!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   * @deprecated Please use {@link Common.chainIdBN} for large number support\n   */\n  chainId(): number {\n    return toType(this.chainIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainIdBN(): BN {\n    return new BN(this._chainParams['chainId'])\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams['name']\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   * @deprecated Please use {@link Common.networkIdBN} for large number support\n   */\n  networkId(): number {\n    return toType(this.networkIdBN(), TypeOutput.Number)\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkIdBN(): BN {\n    return new BN(this._chainParams['networkId'])\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    return this._chainParams['consensus']!['algorithm'] as ConsensusAlgorithm\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: -\n   * clique: period, epoch\n   * aura: -\n   * casper: -\n   *\n   * Note: This value can update along a hardfork.\n   */\n  consensusConfig(): { [key: string]: any } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    if (value) {\n      return value\n    }\n    const consensusAlgorithm = this.consensusAlgorithm()\n    return this._chainParams['consensus']![consensusAlgorithm as ConsensusAlgorithm]\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n","import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n","import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n","/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n","import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n","import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n","import Common, { Chain, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  BN,\n  toBuffer,\n  MAX_INTEGER,\n  MAX_UINT64,\n  unpadBuffer,\n  ecsign,\n  publicToAddress,\n  BNLike,\n  bufferToHex,\n} from 'ethereumjs-util'\nimport {\n  TxData,\n  JsonTx,\n  AccessListEIP2930ValuesArray,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559ValuesArray,\n  FeeMarketEIP1559TxData,\n  TxValuesArray,\n  Capability,\n} from './types'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: BN\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: BN\n  public readonly gasLimit: BN\n  public readonly to?: Address\n  public readonly value: BN\n  public readonly data: Buffer\n\n  public readonly v?: BN\n  public readonly r?: BN\n  public readonly s?: BN\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Istanbul\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = new BN(toBuffer(type)).toNumber()\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = new BN(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = new BN(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = new BN(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? new BN(vB) : undefined\n    this.r = rB.length > 0 ? new BN(rB) : undefined\n    this.s = sB.length > 0 ? new BN(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n  }\n\n  /**\n   * Alias for {@link BaseTransaction.type}\n   *\n   * @deprecated Use `type` instead\n   */\n  get transactionType(): number {\n    return this.type\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): BN {\n    const fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'))\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'))\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost: number | BN = 0\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    cost = new BN(cost)\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = Math.ceil(this.data.length / 32)\n      const initCodeCost = new BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(\n        dataLength\n      )\n      cost.iadd(initCodeCost)\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): BN\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false\n      } else {\n        return true\n      }\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: number, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BNLike) {\n    // Chain ID provided\n    if (chainId) {\n      const chainIdBN = new BN(toBuffer(chainId))\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBN, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.forCustomChain(\n            this.DEFAULT_CHAIN,\n            {\n              name: 'custom-chain',\n              networkId: chainIdBN,\n              chainId: chainIdBN,\n            },\n            this.DEFAULT_HARDFORK\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BN values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BN values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: BN | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value?.gte(MAX_UINT64)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_UINT64)) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value?.gte(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value?.gt(MAX_INTEGER)) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  N_DIV_2,\n  TxOptions,\n} from './types'\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport default class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: BN\n  public readonly maxFeePerGas: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link FeeMarketEIP1559Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link FeeMarketEIP1559Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return FeeMarketEIP1559Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE })\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    if (!this.common.isActivatedEIP(1559)) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = new BN(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = new BN(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    if (this.gasLimit.mul(this.maxFeePerGas).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas.lt(this.maxPriorityFeePerGas)) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: BN = new BN(0)): BN {\n    const inclusionFeePerGas = BN.min(this.maxPriorityFeePerGas, this.maxFeePerGas.sub(baseFee))\n    const gasPrice = inclusionFeePerGas.add(baseFee)\n    return this.gasLimit.mul(gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bnToUnpaddedBuffer(this.maxFeePerGas),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = {\n      common: this.common,\n    }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      maxPriorityFeePerGas: bnToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bnToHex(this.maxFeePerGas),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  keccak256,\n  MAX_INTEGER,\n  rlp,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { BaseTransaction } from './baseTransaction'\nimport {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n  N_DIV_2,\n} from './types'\n\nimport { AccessLists, checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport default class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: BN\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * EIP-2930 alias for `r`\n   *\n   * @deprecated use `r` instead\n   */\n  get senderR() {\n    return this.r\n  }\n\n  /**\n   * EIP-2930 alias for `s`\n   *\n   * @deprecated use `s` instead\n   */\n  get senderS() {\n    return this.s\n  }\n\n  /**\n   * EIP-2930 alias for `v`\n   *\n   * @deprecated use `v` instead\n   */\n  get yParity() {\n    return this.v\n  }\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = rlp.decode(serialized.slice(1))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link AccessListEIP2930Transaction.fromSerializedTx})\n   *\n   * Note: This means that the Buffer should start with 0x01.\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link AccessListEIP2930Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return AccessListEIP2930Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: new BN(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? new BN(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE })\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainIdBN()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = new BN(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n    if (this.v && !this.v.eqn(0) && !this.v.eqn(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    const cost = super.getDataFee()\n    cost.iaddn(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.chainId),\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([TRANSACTION_TYPE_BUFFER, rlp.encode(base as any)])\n    if (hashMessage) {\n      return keccak256(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = keccak256(this.serialize())\n      }\n      return this.cache.hash\n    }\n\n    return keccak256(this.serialize())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { yParity, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        yParity!.addn(27), // Recover the 27 which was stripped from ecsign\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: number, r: Buffer, s: Buffer) {\n    const opts = {\n      common: this.common,\n    }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: new BN(v - 27), // This looks extremely hacky: ethereumjs-util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bnToHex(this.chainId),\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","export { default as Transaction } from './legacyTransaction'\nexport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { default as TransactionFactory } from './transactionFactory'\nexport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport * from './types'\n","import {\n  BN,\n  bnToHex,\n  bnToUnpaddedBuffer,\n  ecrecover,\n  MAX_INTEGER,\n  rlp,\n  rlphash,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from 'ethereumjs-util'\nimport { TxOptions, TxData, JsonTx, N_DIV_2, TxValuesArray, Capability } from './types'\nimport { BaseTransaction } from './baseTransaction'\nimport Common from '@ethereumjs/common'\nimport { checkMaxInitCodeSize } from './util'\n\nconst TRANSACTION_TYPE = 0\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport default class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: BN\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   * (alias of {@link Transaction.fromSerializedTx})\n   *\n   * @deprecated this constructor alias is deprecated and will be removed\n   * in favor of the {@link Transaction.fromSerializedTx} constructor\n   */\n  public static fromRlpSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    return Transaction.fromSerializedTx(serialized, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE })\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = new BN(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice.mul(this.gasLimit).gt(MAX_INTEGER)) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        const v = this.v!\n        const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n        // v and chain ID meet EIP-155 conditions\n        if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    if (this.common.isActivatedEIP(3860)) {\n      checkMaxInitCodeSize(this.common, this.data.length)\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bnToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bnToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bnToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.gasPrice),\n      bnToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bnToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainIdBN()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { rlp } from 'ethereumjs-util'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = rlp.encode(message) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return rlphash(message)\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): BN {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): BN {\n    return this.gasLimit.mul(this.gasPrice).add(this.value)\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    // In contrast to the tx type transaction implementations the `hash()` function\n    // for the legacy tx does not throw if the tx is not signed.\n    // This has been considered for inclusion but lead to unexpected backwards\n    // compatibility problems (no concrete reference found, needs validation).\n    //\n    // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n    // September, 2021 as well as work done before.\n    //\n    // This should be updated along the next major version release by adding:\n    //\n    //if (!this.isSigned()) {\n    //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n    //  throw new Error(msg)\n    //}\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = rlphash(this.raw())\n      }\n      return this.cache.hash\n    }\n\n    return rlphash(this.raw())\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return rlphash(message)\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n    // Reasoning: https://ethereum.stackexchange.com/a/55728\n    if (this.common.gteHardfork('homestead') && this.s?.gt(N_DIV_2)) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n\n    const { v, r, s } = this\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bnToUnpaddedBuffer(r!),\n        bnToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: number, r: Buffer, s: Buffer) {\n    const vBN = new BN(v)\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      vBN.iadd(this.common.chainIdBN().muln(2).addn(8))\n    }\n\n    const opts = {\n      common: this.common,\n    }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v: vBN,\n        r: new BN(r),\n        s: new BN(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bnToHex(this.nonce),\n      gasPrice: bnToHex(this.gasPrice),\n      gasLimit: bnToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bnToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bnToHex(this.v) : undefined,\n      r: this.r !== undefined ? bnToHex(this.r) : undefined,\n      s: this.s !== undefined ? bnToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(v?: BN, common?: Common): Common {\n    let chainIdBN\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      !v.eqn(0) &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      !v.eqn(27) &&\n      !v.eqn(28)\n    ) {\n      if (common) {\n        const chainIdDoubled = common.chainIdBN().muln(2)\n        const isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n        if (!isValidEIP155V) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainIdBN()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if (v.subn(35).isEven()) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBN = v.subn(numSub).divn(2)\n      }\n    }\n    return this._getCommon(common, chainIdBN)\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _unsignedTxImplementsEIP155() {\n    return this.common.gteHardfork('spuriousDragon')\n  }\n\n  /**\n   * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n   */\n  private _signedTxImplementsEIP155() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon')\n\n    // EIP155 spec:\n    // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n    const v = this.v!\n\n    const chainIdDoubled = this.common.chainIdBN().muln(2)\n\n    const vAndChainIdMeetEIP155Conditions =\n      v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))\n\n    return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n","import { BN, toBuffer } from 'ethereumjs-util'\nimport {\n  TxOptions,\n  TypedTransaction,\n  TxData,\n  AccessListEIP2930TxData,\n  FeeMarketEIP1559TxData,\n} from './types'\nimport { Transaction, AccessListEIP2930Transaction, FeeMarketEIP1559Transaction } from '.'\nimport Common from '@ethereumjs/common'\n\nexport default class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = new BN(toBuffer(txData.type)).toNumber()\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      let EIP: number\n      switch (data[0]) {\n        case 1:\n          EIP = 2930\n          break\n        case 2:\n          EIP = 1559\n          break\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n      if (EIP === 1559) {\n        return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n      } else {\n        // EIP === 2930\n        return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   * This helper method allows one to retrieve the class which matches the transactionID\n   * If transactionID is undefined, returns the legacy transaction class.\n   * @deprecated - This method is deprecated and will be removed on the next major release\n   * @param transactionID\n   * @param _common - This option is not used\n   */\n  public static getTransactionClass(transactionID: number = 0, _common?: Common) {\n    const legacyTxn = transactionID == 0 || (transactionID >= 0x80 && transactionID <= 0xff)\n\n    if (legacyTxn) {\n      return Transaction\n    }\n\n    switch (transactionID) {\n      case 1:\n        return AccessListEIP2930Transaction\n      case 2:\n        return FeeMarketEIP1559Transaction\n      default:\n        throw new Error(`TypedTransaction with ID ${transactionID} unknown`)\n    }\n  }\n}\n","import { BN, AddressLike, BNLike, BufferLike, PrefixedHexString } from 'ethereumjs-util'\nimport Common from '@ethereumjs/common'\nimport { default as Transaction } from './legacyTransaction'\nimport { default as AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { default as FeeMarketEIP1559Transaction } from './eip1559Transaction'\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechansim\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add aditional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BNLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BNLike\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BNLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BNLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BNLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BNLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BNLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BNLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BNLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BNLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n}\n\n/**\n * A const defining secp256k1n/2\n */\nexport const N_DIV_2 = new BN(\n  '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n  16\n)\n","import Common from '@ethereumjs/common'\nimport { bufferToHex, setLengthLeft, toBuffer } from 'ethereumjs-util'\nimport { AccessList, AccessListBuffer, AccessListItem, isAccessList } from './types'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  if (length > common.param('vm', 'maxInitCodeSize')) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (accessList && isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length != 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length != 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * accessListAddressCost + slots * accessListStorageKeyCost\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n","import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n","import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n","/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n","import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n","import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n","import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n","export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n","import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: unknown;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: unknown;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(message: unknown, signature: string): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n","import {\n  bufferToHex,\n  ecsign,\n  keccak,\n  publicToAddress,\n  toBuffer,\n} from 'ethereumjs-util';\nimport { rawEncode, soliditySHA3 } from 'ethereumjs-abi';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : keccak(encodeData(type, value, types, version)),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type === 'string') {\n    // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n    if (typeof value === 'string') {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', keccak(value)];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      keccak(\n        rawEncode(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  return keccak(encodeData(primaryType, data, types, version));\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  return keccak(encodeType(primaryType, types));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(\n    hashStruct(\n      'EIP712Domain',\n      sanitizedData.domain,\n      sanitizedData.types,\n      version,\n    ),\n  );\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return keccak(Buffer.concat(parts));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return soliditySHA3(\n    ['bytes32', 'bytes32'],\n    [\n      soliditySHA3(new Array(typedData.length).fill('string'), schema),\n      soliditySHA3(types, data),\n    ],\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n","import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  toUnsigned,\n} from 'ethereumjs-util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: unknown) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.isPrecompiled = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0;\nvar assert = require('assert');\nvar ethjsUtil = require('ethjs-util');\nvar secp256k1 = require('./secp256k1v3-adapter');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\n/**\n * Returns a zero address.\n */\nexports.zeroAddress = function () {\n    var addressLength = 20;\n    var addr = bytes_1.zeros(addressLength);\n    return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexports.isValidAddress = function (address) {\n    return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n * Checks if a given address is a zero address.\n */\nexports.isZeroAddress = function (address) {\n    var zeroAddr = exports.zeroAddress();\n    return zeroAddr === bytes_1.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\nexports.toChecksumAddress = function (address, eip1191ChainId) {\n    address = ethjsUtil.stripHexPrefix(address).toLowerCase();\n    var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n    var hash = hash_1.keccak(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexports.isValidChecksumAddress = function (address, eip1191ChainId) {\n    return exports.isValidAddress(address) && exports.toChecksumAddress(address, eip1191ChainId) === address;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexports.generateAddress = function (from, nonce) {\n    from = bytes_1.toBuffer(from);\n    var nonceBN = new BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return hash_1.rlphash([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexports.generateAddress2 = function (from, salt, initCode) {\n    var fromBuf = bytes_1.toBuffer(from);\n    var saltBuf = bytes_1.toBuffer(salt);\n    var initCodeBuf = bytes_1.toBuffer(initCode);\n    assert(fromBuf.length === 20);\n    assert(saltBuf.length === 32);\n    var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), fromBuf, saltBuf, hash_1.keccak256(initCodeBuf)]));\n    return address.slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium).\n */\nexports.isPrecompiled = function (address) {\n    var a = bytes_1.unpad(address);\n    return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexports.isValidPrivate = function (privateKey) {\n    return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    pubKey = bytes_1.toBuffer(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n    }\n    assert(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return hash_1.keccak(pubKey).slice(-20);\n};\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToAddress = function (privateKey) {\n    return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToPublic = function (privateKey) {\n    privateKey = bytes_1.toBuffer(privateKey);\n    // skip the type flag and use the X, Y points\n    return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexports.importPublic = function (publicKey) {\n    publicKey = bytes_1.toBuffer(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n    }\n    return publicKey;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.stripZeros = exports.unpad = exports.setLengthRight = exports.setLength = exports.setLengthLeft = exports.zeros = void 0;\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\nexports.setLengthLeft = function (msg, length, right) {\n    if (right === void 0) { right = false; }\n    var buf = exports.zeros(length);\n    msg = exports.toBuffer(msg);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\nexports.setLengthRight = function (msg, length) {\n    return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nexports.unpad = function (a) {\n    a = ethjsUtil.stripHexPrefix(a);\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v)) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\nvar BN = require(\"bn.js\");\n/**\n * The max integer that this VM can handle\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlphash = exports.ripemd160 = exports.sha256 = exports.keccak256 = exports.keccak = void 0;\nvar _a = require('ethereum-cryptography/keccak'), keccak224 = _a.keccak224, keccak384 = _a.keccak384, k256 = _a.keccak256, keccak512 = _a.keccak512;\nvar createHash = require('create-hash');\nvar ethjsUtil = require('ethjs-util');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Creates Keccak hash of the input\n * @param a The input data (Buffer|Array|String|Number) If the string is a 0x-prefixed hex value\n * it's interpreted as hexadecimal, otherwise as utf8.\n * @param bits The Keccak width\n */\nexports.keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    if (typeof a === 'string' && !ethjsUtil.isHexString(a)) {\n        a = Buffer.from(a, 'utf8');\n    }\n    else {\n        a = bytes_1.toBuffer(a);\n    }\n    if (!bits)\n        bits = 256;\n    switch (bits) {\n        case 224: {\n            return keccak224(a);\n        }\n        case 256: {\n            return k256(a);\n        }\n        case 384: {\n            return keccak384(a);\n        }\n        case 512: {\n            return keccak512(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\" + bits);\n        }\n    }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.keccak256 = function (a) {\n    return exports.keccak(a);\n};\n/**\n * Creates SHA256 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.sha256 = function (a) {\n    a = bytes_1.toBuffer(a);\n    return createHash('sha256')\n        .update(a)\n        .digest();\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160 = function (a, padded) {\n    a = bytes_1.toBuffer(a);\n    var hash = createHash('rmd160')\n        .update(a)\n        .digest();\n    if (padded === true) {\n        return bytes_1.setLength(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexports.rlphash = function (a) {\n    return exports.keccak(rlp.encode(a));\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.secp256k1 = exports.rlp = exports.BN = void 0;\nvar secp256k1 = require('./secp256k1v3-adapter');\nexports.secp256k1 = secp256k1;\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\nexports.BN = BN;\nvar rlp = require(\"rlp\");\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n__exportStar(require(\"./constants\"), exports);\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__exportStar(require(\"./account\"), exports);\n/**\n * Hash functions\n */\n__exportStar(require(\"./hash\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(require(\"./bytes\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(require(\"./object\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = void 0;\nvar assert = require('assert');\nvar ethjsUtil = require('ethjs-util');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.stripZeros(v);\n                assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ecdhUnsafe = exports.ecdh = exports.recover = exports.verify = exports.sign = exports.signatureImportLax = exports.signatureImport = exports.signatureExport = exports.signatureNormalize = exports.publicKeyCombine = exports.publicKeyTweakMul = exports.publicKeyTweakAdd = exports.publicKeyVerify = exports.publicKeyConvert = exports.publicKeyCreate = exports.privateKeyTweakMul = exports.privateKeyTweakAdd = exports.privateKeyModInverse = exports.privateKeyNegate = exports.privateKeyImport = exports.privateKeyExport = exports.privateKeyVerify = void 0;\nvar secp256k1 = require('ethereum-cryptography/secp256k1');\nvar secp256k1v3 = require('./secp256k1v3-lib/index');\nvar der = require('./secp256k1v3-lib/der');\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\nexports.privateKeyVerify = function (privateKey) {\n    // secp256k1 v4 version throws when privateKey length is not 32\n    if (privateKey.length !== 32) {\n        return false;\n    }\n    return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\nexports.privateKeyExport = function (privateKey, compressed) {\n    // secp256k1 v4 version throws when privateKey length is not 32\n    if (privateKey.length !== 32) {\n        throw new RangeError('private key length is invalid');\n    }\n    var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n    return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyImport = function (privateKey) {\n    // privateKeyImport method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    privateKey = der.privateKeyImport(privateKey);\n    if (privateKey !== null && privateKey.length === 32 && exports.privateKeyVerify(privateKey)) {\n        return privateKey;\n    }\n    throw new Error(\"couldn't import from DER format\");\n};\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyNegate = function (privateKey) {\n    return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.privateKeyModInverse = function (privateKey) {\n    if (privateKey.length !== 32) {\n        throw new Error('private key length is invalid');\n    }\n    return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n    return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n    return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyCreate = function (privateKey, compressed) {\n    return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyConvert = function (publicKey, compressed) {\n    return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nexports.publicKeyVerify = function (publicKey) {\n    // secp256k1 v4 version throws when publicKey length is not 33 or 65\n    if (publicKey.length !== 33 && publicKey.length !== 65) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n    return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n    return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.publicKeyCombine = function (publicKeys, compressed) {\n    var keys = [];\n    publicKeys.forEach(function (publicKey) {\n        keys.push(Uint8Array.from(publicKey));\n    });\n    return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureNormalize = function (signature) {\n    return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureExport = function (signature) {\n    return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureImport = function (signature) {\n    return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\nexports.signatureImportLax = function (signature) {\n    // signatureImportLax method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    // ensure that signature is greater than 0\n    if (signature.length === 0) {\n        throw new RangeError('signature length is invalid');\n    }\n    var sigObj = der.signatureImportLax(signature);\n    if (sigObj === null) {\n        throw new Error(\"couldn't parse DER signature\");\n    }\n    return secp256k1v3.signatureImport(sigObj);\n};\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\nexports.sign = function (message, privateKey, options) {\n    if (options === null) {\n        throw new TypeError('options should be an Object');\n    }\n    var signOptions = undefined;\n    if (options) {\n        signOptions = {};\n        if (options.data === null) {\n            // validate option.data length\n            throw new TypeError('options.data should be a Buffer');\n        }\n        if (options.data) {\n            if (options.data.length != 32) {\n                throw new RangeError('options.data length is invalid');\n            }\n            signOptions.data = new Uint8Array(options.data);\n        }\n        if (options.noncefn === null) {\n            throw new TypeError('options.noncefn should be a Function');\n        }\n        if (options.noncefn) {\n            // convert option.noncefn function signature\n            signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n                var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n                var bufferData = data != null ? Buffer.from(data) : null;\n                var buffer = Buffer.from('');\n                if (options.noncefn) {\n                    buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n                }\n                return new Uint8Array(buffer);\n            };\n        }\n    }\n    var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n    return {\n        signature: Buffer.from(sig.signature),\n        recovery: sig.recid,\n    };\n};\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\nexports.verify = function (message, signature, publicKey) {\n    return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\nexports.recover = function (message, signature, recid, compressed) {\n    return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\nexports.ecdh = function (publicKey, privateKey) {\n    // note: secp256k1 v3 doesn't allow optional parameter\n    return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n    // ecdhUnsafe method is not part of secp256k1 v4 package\n    // this implementation is based on v3\n    // ensure valid publicKey length\n    if (publicKey.length !== 33 && publicKey.length !== 65) {\n        throw new RangeError('public key length is invalid');\n    }\n    // ensure valid privateKey length\n    if (privateKey.length !== 32) {\n        throw new RangeError('private key length is invalid');\n    }\n    return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};\n","\"use strict\";\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x81,\n    0xd3,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0x85,\n    0x30,\n    0x81,\n    0x82,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x21,\n    0x02,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x24,\n    0x03,\n    0x22,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n    // begin\n    0x30,\n    0x82,\n    0x01,\n    0x13,\n    0x02,\n    0x01,\n    0x01,\n    0x04,\n    0x20,\n    // private key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    // middle\n    0xa0,\n    0x81,\n    0xa5,\n    0x30,\n    0x81,\n    0xa2,\n    0x02,\n    0x01,\n    0x01,\n    0x30,\n    0x2c,\n    0x06,\n    0x07,\n    0x2a,\n    0x86,\n    0x48,\n    0xce,\n    0x3d,\n    0x01,\n    0x01,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xff,\n    0xff,\n    0xfc,\n    0x2f,\n    0x30,\n    0x06,\n    0x04,\n    0x01,\n    0x00,\n    0x04,\n    0x01,\n    0x07,\n    0x04,\n    0x41,\n    0x04,\n    0x79,\n    0xbe,\n    0x66,\n    0x7e,\n    0xf9,\n    0xdc,\n    0xbb,\n    0xac,\n    0x55,\n    0xa0,\n    0x62,\n    0x95,\n    0xce,\n    0x87,\n    0x0b,\n    0x07,\n    0x02,\n    0x9b,\n    0xfc,\n    0xdb,\n    0x2d,\n    0xce,\n    0x28,\n    0xd9,\n    0x59,\n    0xf2,\n    0x81,\n    0x5b,\n    0x16,\n    0xf8,\n    0x17,\n    0x98,\n    0x48,\n    0x3a,\n    0xda,\n    0x77,\n    0x26,\n    0xa3,\n    0xc4,\n    0x65,\n    0x5d,\n    0xa4,\n    0xfb,\n    0xfc,\n    0x0e,\n    0x11,\n    0x08,\n    0xa8,\n    0xfd,\n    0x17,\n    0xb4,\n    0x48,\n    0xa6,\n    0x85,\n    0x54,\n    0x19,\n    0x9c,\n    0x47,\n    0xd0,\n    0x8f,\n    0xfb,\n    0x10,\n    0xd4,\n    0xb8,\n    0x02,\n    0x21,\n    0x00,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xff,\n    0xfe,\n    0xba,\n    0xae,\n    0xdc,\n    0xe6,\n    0xaf,\n    0x48,\n    0xa0,\n    0x3b,\n    0xbf,\n    0xd2,\n    0x5e,\n    0x8c,\n    0xd0,\n    0x36,\n    0x41,\n    0x41,\n    0x02,\n    0x01,\n    0x01,\n    0xa1,\n    0x44,\n    0x03,\n    0x42,\n    0x00,\n    // public key\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n    0x00,\n]);\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n    privateKey.copy(result, compressed ? 8 : 9);\n    publicKey.copy(result, compressed ? 181 : 214);\n    return result;\n};\nexports.privateKeyImport = function (privateKey) {\n    var length = privateKey.length;\n    // sequence header\n    var index = 0;\n    if (length < index + 1 || privateKey[index] !== 0x30)\n        return null;\n    index += 1;\n    // sequence length constructor\n    if (length < index + 1 || !(privateKey[index] & 0x80))\n        return null;\n    var lenb = privateKey[index] & 0x7f;\n    index += 1;\n    if (lenb < 1 || lenb > 2)\n        return null;\n    if (length < index + lenb)\n        return null;\n    // sequence length\n    var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n    index += lenb;\n    if (length < index + len)\n        return null;\n    // sequence element 0: version number (=1)\n    if (length < index + 3 ||\n        privateKey[index] !== 0x02 ||\n        privateKey[index + 1] !== 0x01 ||\n        privateKey[index + 2] !== 0x01) {\n        return null;\n    }\n    index += 3;\n    // sequence element 1: octet string, up to 32 bytes\n    if (length < index + 2 ||\n        privateKey[index] !== 0x04 ||\n        privateKey[index + 1] > 0x20 ||\n        length < index + 2 + privateKey[index + 1]) {\n        return null;\n    }\n    return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\nexports.signatureImportLax = function (signature) {\n    var r = Buffer.alloc(32, 0);\n    var s = Buffer.alloc(32, 0);\n    var length = signature.length;\n    var index = 0;\n    // sequence tag byte\n    if (signature[index++] !== 0x30) {\n        return null;\n    }\n    // sequence length byte\n    var lenbyte = signature[index++];\n    if (lenbyte & 0x80) {\n        index += lenbyte - 0x80;\n        if (index > length) {\n            return null;\n        }\n    }\n    // sequence tag byte for r\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for r\n    var rlen = signature[index++];\n    if (rlen & 0x80) {\n        lenbyte = rlen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            rlen = (rlen << 8) + signature[index];\n    }\n    if (rlen > length - index) {\n        return null;\n    }\n    var rindex = index;\n    index += rlen;\n    // sequence tag byte for s\n    if (signature[index++] !== 0x02) {\n        return null;\n    }\n    // length for s\n    var slen = signature[index++];\n    if (slen & 0x80) {\n        lenbyte = slen - 0x80;\n        if (index + lenbyte > length) {\n            return null;\n        }\n        for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1)\n            ;\n        for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1)\n            slen = (slen << 8) + signature[index];\n    }\n    if (slen > length - index) {\n        return null;\n    }\n    var sindex = index;\n    index += slen;\n    // ignore leading zeros in r\n    for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1)\n        ;\n    // copy r value\n    if (rlen > 32) {\n        return null;\n    }\n    var rvalue = signature.slice(rindex, rindex + rlen);\n    rvalue.copy(r, 32 - rvalue.length);\n    // ignore leading zeros in s\n    for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1)\n        ;\n    // copy s value\n    if (slen > 32) {\n        return null;\n    }\n    var svalue = signature.slice(sindex, sindex + slen);\n    svalue.copy(s, 32 - svalue.length);\n    return { r: r, s: s };\n};\n","\"use strict\";\n// This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BN = require(\"bn.js\");\nvar EC = require('elliptic').ec;\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\nexports.privateKeyExport = function (privateKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var d = new BN(privateKey);\n    if (d.ucmp(ecparams.n) >= 0) {\n        throw new Error(\"couldn't export to DER format\");\n    }\n    var point = ec.g.mul(d);\n    return toPublicKey(point.getX(), point.getY(), compressed);\n};\nexports.privateKeyModInverse = function (privateKey) {\n    var bn = new BN(privateKey);\n    if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n        throw new Error('private key range is invalid');\n    }\n    return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\nexports.signatureImport = function (sigObj) {\n    var r = new BN(sigObj.r);\n    if (r.ucmp(ecparams.n) >= 0) {\n        r = new BN(0);\n    }\n    var s = new BN(sigObj.s);\n    if (s.ucmp(ecparams.n) >= 0) {\n        s = new BN(0);\n    }\n    return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n    if (compressed === void 0) { compressed = true; }\n    var point = ec.keyFromPublic(publicKey);\n    var scalar = new BN(privateKey);\n    if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n        throw new Error('scalar was invalid (zero or overflow)');\n    }\n    var shared = point.pub.mul(scalar);\n    return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\nvar toPublicKey = function (x, y, compressed) {\n    var publicKey;\n    if (compressed) {\n        publicKey = Buffer.alloc(33);\n        publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n        x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    }\n    else {\n        publicKey = Buffer.alloc(65);\n        publicKey[0] = 0x04;\n        x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n        y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n    }\n    return publicKey;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar secp256k1 = require('./secp256k1v3-adapter');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexports.ecsign = function (msgHash, privateKey, chainId) {\n    var sig = secp256k1.sign(msgHash, privateKey);\n    var recovery = sig.recovery;\n    var ret = {\n        r: sig.signature.slice(0, 32),\n        s: sig.signature.slice(32, 64),\n        v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27,\n    };\n    return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([bytes_1.setLength(r, 32), bytes_1.setLength(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n    return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexports.toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexports.fromRpcSig = function (sig) {\n    var buf = bytes_1.toBuffer(sig);\n    // NOTE: with potential introduction of chainId this might need to be updated\n    if (buf.length !== 65) {\n        throw new Error('Invalid signature length');\n    }\n    var v = buf[64];\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: buf.slice(0, 32),\n        s: buf.slice(32, 64),\n    };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new BN(r);\n    var sBN = new BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexports.hashPersonalMessage = function (message) {\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n    return hash_1.keccak(Buffer.concat([prefix, message]));\n};\nfunction calculateSigRecovery(v, chainId) {\n    return chainId ? v - (2 * chainId + 35) : v - 27;\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === 0 || recovery === 1;\n}\n","import type { AccessListEIP2930TxData, FeeMarketEIP1559TxData, TxData } from \"@ethereumjs/tx\";\nimport { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { createAsyncMiddleware, createScaffoldMiddleware, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nexport interface ExtendedAccessListEIP2930TxData extends AccessListEIP2930TxData {\n  from: string;\n}\n\nexport interface ExtendedFeeMarketEIP1559Transaction extends FeeMarketEIP1559TxData {\n  from: string;\n}\n\nexport interface ExtendedTxData extends TxData {\n  from: string;\n}\n\nexport type TransactionParams = ExtendedFeeMarketEIP1559Transaction & ExtendedAccessListEIP2930TxData & ExtendedTxData;\n\nexport interface MessageParams<T> {\n  from: string;\n  data: T;\n}\n\nexport interface TypedMessageParams<T> {\n  from: string;\n  version: string;\n  data: T;\n}\n\nfunction resemblesAddress(str: string): boolean {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nexport interface WalletMiddlewareOptions {\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  processDecryptMessage?: (msgParams: MessageParams<string>, req: JRPCRequest<unknown>) => string;\n  processEncryptionPublicKey?: (address: string, req: JRPCRequest<unknown>) => Promise<string>;\n  processEthSignMessage?: (msgParams: MessageParams<string>, req: JRPCRequest<unknown>) => Promise<string>;\n  processPersonalMessage?: (msgParams: MessageParams<string>, req: JRPCRequest<unknown>) => Promise<string>;\n  processTransaction?: (txParams: TransactionParams, req: JRPCRequest<unknown>) => Promise<string>;\n  processSignTransaction?: (txParams: TransactionParams, req: JRPCRequest<unknown>) => Promise<string>;\n  processTypedMessage?: (msgParams: MessageParams<TypedDataV1>, req: JRPCRequest<unknown>, version: string) => Promise<string>;\n  processTypedMessageV3?: (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, req: JRPCRequest<unknown>, version: string) => Promise<string>;\n  processTypedMessageV4?: (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, req: JRPCRequest<unknown>, version: string) => Promise<string>;\n}\n\nexport function createWalletMiddleware({\n  getAccounts,\n  getPrivateKey,\n  processDecryptMessage,\n  processEncryptionPublicKey,\n  processEthSignMessage,\n  processPersonalMessage,\n  processTransaction,\n  processSignTransaction,\n  processTypedMessage,\n  processTypedMessageV3,\n  processTypedMessageV4,\n}: WalletMiddlewareOptions): JRPCMiddleware<string, unknown> {\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  }\n\n  //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n  async function validateAndNormalizeKeyholder(address: string, req: JRPCRequest<unknown>): Promise<string> {\n    if (typeof address === \"string\" && address.length > 0) {\n      // ensure address is included in provided accounts\n      const accounts: string[] = await getAccounts(req);\n      const normalizedAccounts: string[] = accounts.map((_address) => _address.toLowerCase());\n      const normalizedAddress: string = address.toLowerCase();\n\n      if (normalizedAccounts.includes(normalizedAddress)) {\n        return normalizedAddress;\n      }\n    }\n    throw ethErrors.rpc.invalidParams({\n      message: `Invalid parameters: must provide an Ethereum address.`,\n    });\n  }\n\n  //\n  // account lookups\n  //\n\n  async function lookupAccounts(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    res.result = await getAccounts(req);\n  }\n\n  async function lookupDefaultAccount(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const accounts = await getAccounts(req);\n    res.result = accounts[0] || null;\n  }\n\n  //\n  // transaction signatures\n  //\n\n  async function sendTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processTransaction(txParams, req);\n  }\n\n  async function signTransaction(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processSignTransaction) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const txParams: TransactionParams = (req.params as TransactionParams[])[0] || {\n      from: \"\",\n    };\n    txParams.from = await validateAndNormalizeKeyholder(txParams.from as string, req);\n    res.result = await processSignTransaction(txParams, req);\n  }\n\n  //\n  // message signatures\n  //\n\n  async function ethSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEthSignMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: string = (req.params as string[])[1];\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processEthSignMessage(msgParams, req);\n  }\n\n  async function signTypedData(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const message: TypedDataV1 = (req.params as TypedDataV1[])[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[1], req);\n    const version = \"V1\";\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<TypedDataV1> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    res.result = await processTypedMessage(msgParams, req, version);\n  }\n\n  async function signTypedDataV3(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV3) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V3\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV3(msgParams, req, version);\n  }\n\n  async function signTypedDataV4(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processTypedMessageV4) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string[])[0], req);\n    const message: TypedMessage<MessageTypes> = (req.params as TypedMessage<MessageTypes>[])[1];\n    const version = \"V4\";\n    const msgParams: TypedMessageParams<TypedMessage<MessageTypes>> = {\n      data: message,\n      from: address,\n      version,\n    };\n\n    res.result = await processTypedMessageV4(msgParams, req, version);\n  }\n\n  async function personalSign(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processPersonalMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    // process normally\n    const firstParam: string = (req.params as string[])[0];\n    const secondParam: string = (req.params as string[])[1];\n    // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n\n    // We initially incorrectly ordered these parameters.\n    // To gracefully respect users who adopted this API early,\n    // we are currently gracefully recovering from the wrong param order\n    // when it is clearly identifiable.\n    //\n    // That means when the first param is definitely an address,\n    // and the second param is definitely not, but is hex.\n    let address: string, message: string;\n    if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n      let warning = `The eth_personalSign method requires params ordered `;\n      warning += `[message, address]. This was previously handled incorrectly, `;\n      warning += `and has been corrected automatically. `;\n      warning += `Please switch this param order for smooth behavior in the future.`;\n      (res as any).warning = warning;\n\n      address = firstParam;\n      message = secondParam;\n    } else {\n      message = firstParam;\n      address = secondParam;\n    }\n    address = await validateAndNormalizeKeyholder(address, req);\n\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: message,\n    };\n\n    // eslint-disable-next-line require-atomic-updates\n    res.result = await processPersonalMessage(msgParams, req);\n  }\n\n  async function encryptionPublicKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processEncryptionPublicKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[0], req);\n\n    res.result = await processEncryptionPublicKey(address, req);\n  }\n\n  async function decryptMessage(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!processDecryptMessage) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n\n    const ciphertext: string = (req.params as string)[0];\n    const address: string = await validateAndNormalizeKeyholder((req.params as string)[1], req);\n    const extraParams: Record<string, unknown> = (req.params as Record<string, unknown>[])[2] || {};\n    const msgParams: MessageParams<string> = {\n      ...extraParams,\n      from: address,\n      data: ciphertext,\n    };\n\n    res.result = processDecryptMessage(msgParams, req);\n  }\n\n  async function fetchPrivateKey(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    if (!getPrivateKey) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n    res.result = getPrivateKey(req);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage),\n  });\n}\n","import {\n  createAsyncMiddleware,\n  createScaffoldMiddleware,\n  JRPCMiddleware,\n  JRPCRequest,\n  JRPCResponse,\n  mergeMiddleware,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createWalletMiddleware, WalletMiddlewareOptions } from \"./walletMidddleware\";\n\nexport type IProviderHandlers = WalletMiddlewareOptions;\nexport function createEthMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const {\n    getAccounts,\n    getPrivateKey,\n    processTransaction,\n    processSignTransaction,\n    processEthSignMessage,\n    processTypedMessage,\n    processTypedMessageV3,\n    processTypedMessageV4,\n    processPersonalMessage,\n    processEncryptionPublicKey,\n    processDecryptMessage,\n  } = providerHandlers;\n  const ethMiddleware = mergeMiddleware([\n    createScaffoldMiddleware({\n      eth_syncing: false,\n    }),\n    createWalletMiddleware({\n      getAccounts,\n      getPrivateKey,\n      processTransaction,\n      processEthSignMessage,\n      processSignTransaction,\n      processTypedMessage,\n      processTypedMessageV3,\n      processTypedMessageV4,\n      processPersonalMessage,\n      processEncryptionPublicKey,\n      processDecryptMessage,\n    }),\n  ]);\n  return ethMiddleware;\n}\n\nexport interface AddEthereumChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addChain: (params: AddEthereumChainParameter) => Promise<void>;\n  switchChain: (params: { chainId: string }) => Promise<void>;\n}\n\nexport function createChainSwitchMiddleware({ addChain, switchChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  async function addNewChain(req: JRPCRequest<AddEthereumChainParameter[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n    if (!chainParams.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n    if (!chainParams.rpcUrls || chainParams.rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n    if (!chainParams.nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n    res.result = await addChain(chainParams);\n  }\n  async function updateChain(req: JRPCRequest<{ chainId: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const chainParams = req.params?.length ? req.params[0] : undefined;\n    if (!chainParams) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n    res.result = await switchChain(chainParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain),\n  });\n}\n\n// #region account middlewares\nexport interface IAccountHandlers {\n  updatePrivatekey: (params: { privateKey: string }) => Promise<void>;\n}\n\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  async function updateAccount(req: JRPCRequest<{ privateKey: string }[]>, res: JRPCResponse<unknown>): Promise<void> {\n    const accountParams = req.params?.length ? req.params[0] : undefined;\n    if (!accountParams?.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n    res.result = await updatePrivatekey(accountParams);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount),\n  });\n}\n\n// #endregion account middlewares\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport type { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: CustomChainConfig): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<CustomChainConfig>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createJsonRpcClient(providerConfig: CustomChainConfig): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { chainId, rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import { MessageTypes, TypedDataV1, TypedMessage } from \"@metamask/eth-sig-util\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector, ITxData } from \"@walletconnect/types\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/ethRpcMiddlewares\";\nimport { MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/walletMidddleware\";\n\nexport function getProviderHandlers({ connector }: { connector: IConnector }): IProviderHandlers {\n  return {\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getAccounts: async (_: JRPCRequest<unknown>) => {\n      const { accounts } = connector;\n      if (accounts && accounts.length) {\n        return accounts;\n      }\n      throw new Error(\"Failed to get accounts\");\n    },\n    processTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.sendTransaction(txParams as ITxData);\n      return result;\n    },\n    processSignTransaction: async (txParams: TransactionParams, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTransaction(txParams as ITxData);\n      return result;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signMessage([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signPersonalMessage([msgParams.data, msgParams.from]);\n      return result;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>): Promise<string> => {\n      const result = await connector.signTypedData([msgParams.from, msgParams.data]);\n      return result;\n    },\n    processEncryptionPublicKey: async (_: string): Promise<string> => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    processDecryptMessage: (_: MessageParams<string>): string => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n  };\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport type { IConnector } from \"@walletconnect/types\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, isHexStrict, log, WalletInitializationError, WalletLoginError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createEthMiddleware } from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./walletConnectUtils\";\n\nexport interface WalletConnectProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface WalletConnectProviderState extends BaseProviderState {\n  accounts: string[];\n}\n\nexport class WalletConnectProvider extends BaseProvider<BaseProviderConfig, WalletConnectProviderState, IConnector> {\n  private connector: IConnector | null = null;\n\n  constructor({ config, state, connector }: { config: WalletConnectProviderConfig; state?: BaseProviderState; connector?: IConnector }) {\n    super({\n      config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 }, skipLookupNetwork: !!config.skipLookupNetwork },\n      state: { ...(state || {}), chainId: \"loading\", accounts: [] },\n    });\n    this.connector = connector || null;\n  }\n\n  public static getProviderInstance = async (params: {\n    connector: IConnector;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n    skipLookupNetwork: boolean;\n  }): Promise<WalletConnectProvider> => {\n    const providerFactory = new WalletConnectProvider({ config: { chainConfig: params.chainConfig, skipLookupNetwork: params.skipLookupNetwork } });\n    await providerFactory.setupProvider(params.connector);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    await this.setupProvider(this.connector);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(connector: IConnector): Promise<void> {\n    this.onConnectorStateUpdate(connector);\n    await this.setupEngine(connector);\n  }\n\n  public async switchChain({ chainId, addChain = true, lookup = true }: { chainId: string; addChain?: boolean; lookup?: boolean }): Promise<void> {\n    if (!this.connector)\n      throw ethErrors.provider.custom({ message: \"Connector is not initialized, pass wallet connect connector in constructor\", code: 4902 });\n    const currentChainConfig = this.getChainConfig(chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    const { rpcTarget, displayName } = currentChainConfig;\n    if (addChain) {\n      try {\n        await this.connector.sendCustomRequest({\n          method: \"wallet_addEthereumChain\",\n          params: [{ chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n        });\n      } catch (error) {\n        log.error(error);\n      }\n    }\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      log.error(error);\n      // ignore this error because metamask & others return provider.result as null\n      // wallet connect thinks this is wrong\n      if (error.message !== \"JSON RPC response format is invalid\") {\n        throw error;\n      }\n    }\n\n    this.configure({ chainConfig: currentChainConfig });\n    if (lookup) await this.lookupNetwork(this.connector);\n  }\n\n  async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const { rpcTarget, displayName } = chainConfig;\n\n    try {\n      await this.connector.sendCustomRequest({\n        method: \"wallet_addEthereumChain\",\n        params: [{ chainId: chainConfig.chainId, chainName: displayName, rpcUrls: [rpcTarget] }],\n      });\n      super.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n      throw error;\n    }\n  }\n\n  protected async lookupNetwork(connector: IConnector): Promise<string> {\n    if (!connector.connected) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    const connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : `0x${connector.chainId.toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.provider.emit(\"connect\", { chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return connectedHexChainId;\n  }\n\n  private async setupEngine(connector: IConnector): Promise<void> {\n    const providerHandlers = getProviderHandlers({ connector });\n    this.update({\n      accounts: connector.accounts || [],\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    if (!this.config.skipLookupNetwork) await this.lookupNetwork(connector);\n  }\n\n  private async onConnectorStateUpdate(connector: IConnector) {\n    connector.on(\"session_update\", async (error: Error | null, payload) => {\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n      if (error) {\n        this.provider.emit(\"error\", error);\n        return;\n      }\n      const { accounts, chainId: connectedChainId, rpcUrl }: { accounts?: string[]; chainId?: number; rpcUrl?: string } = payload.params[0];\n      // Check if accounts changed and trigger event\n      if (accounts?.length && this.state.accounts[0] !== accounts[0]) {\n        this.update({\n          accounts,\n        });\n        // await this.setupEngine(connector);\n        this.provider.emit(\"accountsChanged\", accounts);\n      }\n      const connectedHexChainId = `0x${connectedChainId.toString(16)}`;\n      // Check if chainId changed and trigger event\n      if (connectedChainId && this.state.chainId !== connectedHexChainId) {\n        const maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {};\n        // Handle rpcUrl update\n        this.configure({\n          chainConfig: { ...maybeConfig, chainId: connectedHexChainId, rpcTarget: rpcUrl, chainNamespace: CHAIN_NAMESPACES.EIP155 },\n        });\n        await this.setupEngine(connector);\n      }\n    });\n  }\n}\n","import { TransactionFactory } from \"@ethereumjs/tx\";\nimport {\n  decrypt,\n  EthEncryptedData,\n  getEncryptionPublicKey,\n  MessageTypes,\n  personalSign,\n  signTypedData,\n  SignTypedDataVersion,\n  TypedDataV1,\n  TypedMessage,\n} from \"@metamask/eth-sig-util\";\nimport { SafeEventEmitterProvider, signMessage } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { log } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { privateToAddress, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { IProviderHandlers } from \"../../rpc/ethRpcMiddlewares\";\nimport { MessageParams, TransactionParams, TypedMessageParams } from \"../../rpc/walletMidddleware\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nasync function signTx(txParams: TransactionParams & { gas?: string }, privKey: string, txFormatter: TransactionFormatter): Promise<Buffer> {\n  const finalTxParams = await txFormatter.formatTransaction(txParams);\n  const common = await txFormatter.getCommonConfiguration();\n  const unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n    common,\n  });\n  const signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n  return signedTx;\n}\n\nexport function getProviderHandlers({\n  txFormatter,\n  privKey,\n  getProviderEngineProxy,\n}: {\n  txFormatter: TransactionFormatter;\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): IProviderHandlers {\n  return {\n    getAccounts: async (_: JRPCRequest<unknown>) => [`0x${privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\")}`],\n    getPrivateKey: async (_: JRPCRequest<unknown>) => privKey,\n    processTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      const txHash = await providerEngineProxy.request<string[], string>({\n        method: \"eth_sendRawTransaction\",\n        params: [\"0x\".concat(signedTx.toString(\"hex\"))],\n      });\n      return txHash;\n    },\n    processSignTransaction: async (txParams: TransactionParams & { gas?: string }, _: JRPCRequest<unknown>): Promise<string> => {\n      const providerEngineProxy = getProviderEngineProxy();\n      if (!providerEngineProxy)\n        throw ethErrors.provider.custom({\n          message: \"Provider is not initialized\",\n          code: 4902,\n        });\n      const signedTx = await signTx(txParams, privKey, txFormatter);\n      return `0x${signedTx.toString(\"hex\")}`;\n    },\n    processEthSignMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const rawMessageSig = signMessage(privKey, msgParams.data);\n      return rawMessageSig;\n    },\n    processPersonalMessage: async (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): Promise<string> => {\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = personalSign({ privateKey: privKeyBuffer, data: msgParams.data });\n      return sig;\n    },\n    processTypedMessage: async (msgParams: MessageParams<TypedDataV1>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessage\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = signTypedData({ privateKey: privKeyBuffer, data: msgParams.data, version: SignTypedDataVersion.V1 });\n      return sig;\n    },\n    processTypedMessageV3: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV3\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = signTypedData({ privateKey: privKeyBuffer, data: msgParams.data, version: SignTypedDataVersion.V3 });\n      return sig;\n    },\n    processTypedMessageV4: async (msgParams: TypedMessageParams<TypedMessage<MessageTypes>>, _: JRPCRequest<unknown>): Promise<string> => {\n      log.debug(\"processTypedMessageV4\", msgParams);\n      const privKeyBuffer = Buffer.from(privKey, \"hex\");\n      const sig = signTypedData({ privateKey: privKeyBuffer, data: msgParams.data, version: SignTypedDataVersion.V4 });\n      return sig;\n    },\n    processEncryptionPublicKey: async (address: string, _: JRPCRequest<unknown>): Promise<string> => {\n      log.info(\"processEncryptionPublicKey\", address);\n      return getEncryptionPublicKey(privKey);\n    },\n    processDecryptMessage: (msgParams: MessageParams<string>, _: JRPCRequest<unknown>): string => {\n      log.info(\"processDecryptMessage\", msgParams);\n      const stripped = stripHexPrefix(msgParams.data);\n      const buff = Buffer.from(stripped, \"hex\");\n      const decrypted = decrypt({ encryptedData: JSON.parse(buff.toString(\"utf8\")) as EthEncryptedData, privateKey: privKey });\n      return decrypted;\n    },\n  };\n}\n","import BigNumber from \"bignumber.js\";\nimport { stripHexPrefix } from \"ethereumjs-util\";\n\ntype DenominationType = \"WEI\" | \"GWEI\" | \"ETH\";\ntype NumericBaseType = \"hex\" | \"dec\";\n\ntype ConverterInput = {\n  value: string | BigNumber;\n  fromNumericBase: NumericBaseType;\n  fromDenomination?: DenominationType;\n  toNumericBase?: NumericBaseType;\n  toDenomination?: DenominationType;\n  numberOfDecimals?: number;\n};\n// Big Number Constants\nconst BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nconst BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nconst BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\");\n\n// Setter Maps\nconst toBigNumber: Record<NumericBaseType, (n: string | BigNumber) => BigNumber> = {\n  hex: (n: string | BigNumber) => (typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16)),\n  dec: (n: string | BigNumber) => new BigNumber(n, 10),\n};\nconst toNormalizedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER),\n  GWEI: (bigNumber) => bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER),\n  ETH: (bigNumber) => bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER),\n};\nconst toSpecifiedDenomination: Record<string, (n: BigNumber) => BigNumber> = {\n  WEI: (bigNumber) => bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP),\n  GWEI: (bigNumber) => bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n  ETH: (bigNumber) => bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP),\n};\nconst baseChange: Record<string, (n: BigNumber) => string> = {\n  hex: (n) => n.toString(16),\n  dec: (n) => new BigNumber(n).toString(10),\n};\n\nconst converter = (params: ConverterInput): string | BigNumber => {\n  const { value, fromNumericBase, fromDenomination, toNumericBase, toDenomination, numberOfDecimals } = params;\n  let convertedValue: string | BigNumber = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue as BigNumber);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue as BigNumber);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = (convertedValue as BigNumber).dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n  return convertedValue;\n};\n\nconst conversionUtil = (\n  value: string | BigNumber,\n  { fromNumericBase = \"hex\", toNumericBase, fromDenomination, toDenomination, numberOfDecimals }: Partial<ConverterInput>\n): BigNumber | string => {\n  return converter({\n    fromNumericBase,\n    toNumericBase,\n    fromDenomination,\n    toDenomination,\n    numberOfDecimals,\n    value: value || \"0\",\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\",\n  }) as string;\n}\n\nfunction hexWEIToDecGWEI(decGWEI: string | BigNumber): string {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\",\n  }) as string;\n}\n\nexport { conversionUtil, decGWEIToHexWEI, hexWEIToDecGWEI };\n","import { BigNumber } from \"bignumber.js\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nexport function bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n  return new BigNumber(a, 10).lt(b, 10);\n}\n\nexport function bnToHex(inputBn: BigNumber) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nexport function hexToBn(inputHex: string): BigNumber {\n  if (BigNumber.isBigNumber(inputHex)) return inputHex;\n  return new BigNumber(stripHexPrefix(inputHex), 16);\n}\n\nexport function BnMultiplyByFraction(targetBN: BigNumber, numerator: number | BigNumber, denominator: number | BigNumber): BigNumber {\n  const numberBN = new BigNumber(numerator);\n  const denomBN = new BigNumber(denominator);\n  return targetBN.multipliedBy(numberBN).dividedBy(denomBN);\n}\n","export const LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nexport const EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nexport const TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\",\n};\n\nexport const TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\",\n};\n\nexport const GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\",\n};\n","import { get } from \"@toruslabs/http-helpers\";\nimport { BigNumber } from \"bignumber.js\";\n\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { EIP1159GasData, LegacyGasData } from \"./interfaces\";\n\nexport function normalizeGWEIDecimalNumbers(n: string | BigNumber): string {\n  const numberAsWEIHex = decGWEIToHexWEI(n);\n  const numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nexport async function fetchEip1159GasEstimates(url: string): Promise<EIP1159GasData> {\n  const estimates = await get<EIP1159GasData>(url);\n  const normalizedEstimates = {\n    ...estimates,\n    estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n    low: {\n      ...estimates.low,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas),\n    },\n    medium: {\n      ...estimates.medium,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas),\n    },\n    high: {\n      ...estimates.high,\n      suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n      suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas),\n    },\n  };\n  return normalizedEstimates;\n}\n\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\nexport async function fetchLegacyGasPriceEstimates(url: string): Promise<LegacyGasData> {\n  const result = await get<{\n    SafeGasPrice: string;\n    ProposeGasPrice: string;\n    FastGasPrice: string;\n  }>(url, {\n    referrer: url,\n    referrerPolicy: \"no-referrer-when-downgrade\",\n    method: \"GET\",\n    mode: \"cors\",\n  });\n  return {\n    low: result.SafeGasPrice,\n    medium: result.ProposeGasPrice,\n    high: result.FastGasPrice,\n  };\n}\n","import Common, { Hardfork } from \"@ethereumjs/common\";\nimport { Block } from \"@toruslabs/base-controllers\";\nimport { CustomChainConfig, log, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { addHexPrefix, stripHexPrefix } from \"ethereumjs-util\";\n\nimport { TransactionParams } from \"../../../rpc/walletMidddleware\";\nimport { decGWEIToHexWEI, hexWEIToDecGWEI } from \"../../converter\";\nimport { bnLessThan, BnMultiplyByFraction, bnToHex, hexToBn } from \"../../utils\";\nimport { EIP1559APIEndpoint, GAS_ESTIMATE_TYPES, LegacyGasAPIEndpoint, TRANSACTION_ENVELOPE_TYPES, TRANSACTION_TYPES } from \"./constants\";\nimport { EIP1159GasData, FallbackGasData, GasData, LegacyGasData, TxType } from \"./interfaces\";\nimport { fetchEip1159GasEstimates, fetchLegacyGasPriceEstimates } from \"./utils\";\n\nexport class TransactionFormatter {\n  private chainConfig: CustomChainConfig | null = null;\n\n  private getProviderEngineProxy: () => SafeEventEmitterProvider;\n\n  private isEIP1559Compatible = false;\n\n  constructor({ getProviderEngineProxy }: { getProviderEngineProxy: () => SafeEventEmitterProvider }) {\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  get providerProxy() {\n    return this.getProviderEngineProxy();\n  }\n\n  async init(): Promise<void> {\n    this.chainConfig = (await this.providerProxy.request<CustomChainConfig>({ method: \"eth_provider_config\", params: [] })) as CustomChainConfig;\n    this.isEIP1559Compatible = await this.getEIP1559Compatibility();\n  }\n\n  async getCommonConfiguration(): Promise<Common> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const { displayName: name, chainId } = this.chainConfig;\n    const hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n    const customChainParams = {\n      name,\n      chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n      defaultHardfork: hardfork,\n    };\n    return Common.custom(customChainParams);\n  }\n\n  async formatTransaction(txParams: TransactionParams & { gas?: string }): Promise<TransactionParams & { gas?: string }> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n\n    const clonedTxParams = {\n      ...txParams,\n    };\n\n    if (clonedTxParams.nonce === undefined)\n      clonedTxParams.nonce = (await this.providerProxy.request<number>({\n        method: \"eth_getTransactionCount\",\n        params: [txParams.from, \"latest\"],\n      })) as number;\n\n    if (!this.isEIP1559Compatible && clonedTxParams.gasPrice) {\n      if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n      if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas;\n      return clonedTxParams;\n    }\n\n    if (!clonedTxParams.gas) {\n      const defaultGasLimit = await this.getDefaultGasLimit(clonedTxParams);\n      if (defaultGasLimit) {\n        clonedTxParams.gasLimit = defaultGasLimit;\n      }\n    } else {\n      clonedTxParams.gasLimit = clonedTxParams.gas;\n    }\n\n    const {\n      gasPrice: defaultGasPrice,\n      maxFeePerGas: defaultMaxFeePerGas,\n      maxPriorityFeePerGas: defaultMaxPriorityFeePerGas,\n    } = await this.getDefaultGasFees(clonedTxParams);\n\n    if (this.isEIP1559Compatible) {\n      // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n      //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n      if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n        clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n\n        clonedTxParams.maxPriorityFeePerGas = bnLessThan(\n          typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas,\n          typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice\n        )\n          ? defaultMaxPriorityFeePerGas\n          : clonedTxParams.gasPrice;\n      } else {\n        if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n        }\n\n        if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n          // with the one returned by the gasFeeController, if that is available.\n          clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n        }\n\n        if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n          // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n          // available.\n          clonedTxParams.maxFeePerGas = defaultGasPrice;\n        }\n\n        if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n          // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n          // available  then we set maxPriorityFeePerGas to\n          // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n          // set by the dapp, or the maxFeePerGas from the controller.\n          clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n        }\n      }\n\n      // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n      delete clonedTxParams.gasPrice;\n    } else {\n      // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n      // when not on a EIP1559 compatible network\n\n      delete clonedTxParams.maxPriorityFeePerGas;\n      delete clonedTxParams.maxFeePerGas;\n    }\n\n    // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n    // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n    // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n    // were available from either the dapp or the network.\n    if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n      clonedTxParams.gasPrice = defaultGasPrice as never;\n    }\n\n    clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n    clonedTxParams.chainId = this.chainConfig.chainId;\n    return clonedTxParams;\n  }\n\n  private async fetchEthGasPriceEstimate(): Promise<{ gasPrice: string }> {\n    const gasPrice = (await this.providerProxy.request<string>({ method: \"eth_gasPrice\", params: [] })) as string;\n    return {\n      gasPrice: hexWEIToDecGWEI(gasPrice).toString(),\n    };\n  }\n\n  private async getEIP1559Compatibility(): Promise<boolean> {\n    const latestBlock = await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] });\n    const supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n\n    return !!supportsEIP1559;\n  }\n\n  private async fetchGasFeeEstimateData(): Promise<GasData> {\n    if (!this.chainConfig) throw new Error(\"Chain config not initialized\");\n    const isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n\n    const chainId = Number.parseInt(this.chainConfig.chainId, 16);\n\n    let gasData: GasData;\n\n    try {\n      if (this.isEIP1559Compatible) {\n        // TODO: kovan is not working due to a bug in metamask api\n        const estimates = await fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET,\n        };\n      } else if (isLegacyGasAPICompatible) {\n        const estimates = await fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", `${chainId}`));\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY,\n        };\n      } else {\n        throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n      }\n    } catch (e: unknown) {\n      try {\n        const estimates = await this.fetchEthGasPriceEstimate();\n        gasData = {\n          gasFeeEstimates: estimates,\n          gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE,\n        };\n      } catch (error: unknown) {\n        throw new Error(`Gas fee/price estimation failed. Message: ${(error as Error).message}`);\n      }\n    }\n    return gasData;\n  }\n\n  private async getDefaultGasFees(\n    txParams: TransactionParams & { gas?: string }\n  ): Promise<{ gasPrice?: string; maxFeePerGas?: string; maxPriorityFeePerGas?: string }> {\n    if ((!this.isEIP1559Compatible && txParams.gasPrice) || (this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n      return {};\n    }\n\n    try {\n      const { gasFeeEstimates, gasEstimateType } = await this.fetchGasFeeEstimateData();\n      if (this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET) {\n        const { medium: { suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas } = {} } = gasFeeEstimates as EIP1159GasData;\n\n        if (suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas) {\n          return {\n            maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n            maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas)),\n          };\n        }\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY) {\n        // The LEGACY type includes low, medium and high estimates of\n        // gas price values.\n        return {\n          gasPrice: decGWEIToHexWEI((gasFeeEstimates as LegacyGasData).medium),\n        };\n      } else if (gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE) {\n        // The ETH_GASPRICE type just includes a single gas price property,\n        // which we can assume was retrieved from eth_gasPrice\n        return {\n          gasPrice: addHexPrefix(decGWEIToHexWEI((gasFeeEstimates as FallbackGasData).gasPrice)),\n        };\n      }\n    } catch (error) {\n      log.error(error);\n    }\n\n    const { gasPrice } = await this.fetchEthGasPriceEstimate();\n\n    return { gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice)) };\n  }\n\n  private async estimateTxGas(txMeta: TransactionParams): Promise<string> {\n    const txParams = { ...txMeta };\n\n    // `eth_estimateGas` can fail if the user has insufficient balance for the\n    // value being sent, or for the gas cost. We don't want to check their\n    // balance here, we just want the gas estimate. The gas price is removed\n    // to skip those balance checks. We check balance elsewhere. We also delete\n    // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n    delete txParams.gasPrice;\n    delete txParams.maxFeePerGas;\n    delete txParams.maxPriorityFeePerGas;\n    const gas = (await this.providerProxy.request<string>({ method: \"eth_estimateGas\", params: [txParams] })) as string;\n    return gas;\n  }\n\n  private async analyzeGasUsage(txMeta: TransactionParams): Promise<{\n    blockGasLimit: string;\n    estimatedGasHex: string;\n  }> {\n    const block = (await this.providerProxy.request<Block>({ method: \"eth_getBlockByNumber\", params: [\"latest\", false] })) as Block;\n    // fallback to block gasLimit\n    const blockGasLimitBN = hexToBn(block.gasLimit as string);\n    const saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n    let estimatedGasHex = bnToHex(saferGasLimitBN);\n\n    try {\n      estimatedGasHex = await this.estimateTxGas(txMeta);\n    } catch (error: unknown) {\n      log.warn(error);\n    }\n    return { blockGasLimit: block.gasLimit as string, estimatedGasHex };\n  }\n\n  private addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier = 1.5): string {\n    const initialGasLimitBn = hexToBn(initialGasLimitHex);\n    const blockGasLimitBn = hexToBn(blockGasLimitHex);\n    const upperGasLimitBn = blockGasLimitBn.multipliedBy(0.9).dp(0, 1);\n    const bufferedGasLimitBn = initialGasLimitBn.multipliedBy(multiplier).dp(0, 1);\n\n    // if initialGasLimit is above blockGasLimit, dont modify it\n    if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn);\n    // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n    if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn);\n    // otherwise use blockGasLimit\n    return bnToHex(upperGasLimitBn);\n  }\n\n  private async determineTransactionCategory(txParameters: TransactionParams & { gas?: string }): Promise<{\n    transactionCategory: TxType | null;\n    code?: string;\n  }> {\n    const { data, to } = txParameters;\n    let code = \"\";\n\n    let txCategory: TxType | null;\n\n    if (data && !to) {\n      txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n    } else {\n      try {\n        code = (await this.providerProxy.request<string>({ method: \"eth_getCode\", params: [to, \"latest\"] })) as string;\n      } catch (error) {\n        log.warn(error);\n      }\n      const codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n\n      txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n    }\n\n    return { transactionCategory: txCategory, code };\n  }\n\n  private async getDefaultGasLimit(txParams: TransactionParams & { gas?: string }): Promise<string> {\n    const { transactionCategory } = await this.determineTransactionCategory({ ...txParams });\n\n    if (txParams.gas) {\n      return txParams.gas;\n    }\n\n    if (txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER) {\n      // if there's data in the params, but there's no contract code, it's not a valid transaction\n      if (txParams.data) {\n        throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n      }\n\n      const TWENTY_ONE_THOUSAND = 21_000;\n\n      // This is a standard ether simple send, gas requirement is exactly 21k\n      return addHexPrefix(TWENTY_ONE_THOUSAND.toString(16));\n    }\n\n    const { blockGasLimit, estimatedGasHex } = await this.analyzeGasUsage(txParams);\n\n    // add additional gas buffer to our estimation for safety\n    const gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit as string);\n    return gasLimit;\n  }\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport {\n  AddEthereumChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createEthMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/ethRpcMiddlewares\";\nimport { createJsonRpcClient } from \"../../rpc/jrpcClient\";\nimport { getProviderHandlers } from \"./ethPrivatekeyUtils\";\nimport { TransactionFormatter } from \"./TransactionFormatter\";\n\nexport interface EthereumPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\n\nexport interface EthereumPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class EthereumPrivateKeyProvider extends BaseProvider<BaseProviderConfig, EthereumPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: EthereumPrivKeyProviderConfig; state?: EthereumPrivKeyProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.EIP155 } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<EthereumPrivateKeyProvider> => {\n    const providerFactory = new EthereumPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const txFormatter = new TransactionFormatter({\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const providerHandlers = getProviderHandlers({\n      txFormatter,\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this),\n    });\n    const ethMiddleware = createEthMiddleware(providerHandlers);\n    const chainSwitchMiddleware = this.getChainSwitchMiddleware();\n    const engine = new JRPCEngine();\n    // Not a partial anymore because of checks in ctor\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(ethMiddleware);\n    engine.push(chainSwitchMiddleware);\n    engine.push(this.getAccountMiddleware());\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await txFormatter.init();\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"eth_private_key\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n    if (!chainId) throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n    const network = await this._providerEngineProxy.request<string[], string>({\n      method: \"net_version\",\n      params: [],\n    });\n\n    if (parseInt(chainId, 16) !== parseInt(network, 10)) throw ethErrors.provider.chainDisconnected(`Invalid network, net_version is: ${network}`);\n    if (this.state.chainId !== chainId) {\n      this._providerEngineProxy.emit(\"chainChanged\", chainId);\n      this._providerEngineProxy.emit(\"connect\", { chainId });\n    }\n    this.update({ chainId });\n    return network;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addChain: async (params: AddEthereumChainParameter): Promise<void> => {\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = params;\n        this.addChain({\n          chainNamespace: \"eip155\",\n          chainId,\n          ticker: nativeCurrency?.symbol || \"ETH\",\n          tickerName: nativeCurrency?.name || \"Ether\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchChain: async (params: { chainId: string }): Promise<void> => {\n        const { chainId } = params;\n        await this.switchChain({ chainId });\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (params: { privateKey: string }): Promise<void> => {\n        const { privateKey } = params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProviderError = exports.EthereumRpcError = void 0;\nconst fast_safe_stringify_1 = require(\"fast-safe-stringify\");\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP-1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n    constructor(code, message, data) {\n        if (!Number.isInteger(code)) {\n            throw new Error('\"code\" must be an integer.');\n        }\n        if (!message || typeof message !== 'string') {\n            throw new Error('\"message\" must be a nonempty string.');\n        }\n        super(message);\n        this.code = code;\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n    /**\n     * Returns a plain object with all public class properties.\n     */\n    serialize() {\n        const serialized = {\n            code: this.code,\n            message: this.message,\n        };\n        if (this.data !== undefined) {\n            serialized.data = this.data;\n        }\n        if (this.stack) {\n            serialized.stack = this.stack;\n        }\n        return serialized;\n    }\n    /**\n     * Return a string representation of the serialized error, omitting\n     * any circular references.\n     */\n    toString() {\n        return fast_safe_stringify_1.default(this.serialize(), stringifyReplacer, 2);\n    }\n}\nexports.EthereumRpcError = EthereumRpcError;\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n    /**\n     * Create an Ethereum Provider JSON-RPC error.\n     * `code` must be an integer in the 1000 <= 4999 range.\n     */\n    constructor(code, message, data) {\n        if (!isValidEthProviderCode(code)) {\n            throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n        }\n        super(code, message, data);\n    }\n}\nexports.EthereumProviderError = EthereumProviderError;\n// Internal\nfunction isValidEthProviderCode(code) {\n    return Number.isInteger(code) && code >= 1000 && code <= 4999;\n}\nfunction stringifyReplacer(_, value) {\n    if (value === '[Circular]') {\n        return undefined;\n    }\n    return value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorValues = exports.errorCodes = void 0;\nexports.errorCodes = {\n    rpc: {\n        invalidInput: -32000,\n        resourceNotFound: -32001,\n        resourceUnavailable: -32002,\n        transactionRejected: -32003,\n        methodNotSupported: -32004,\n        limitExceeded: -32005,\n        parse: -32700,\n        invalidRequest: -32600,\n        methodNotFound: -32601,\n        invalidParams: -32602,\n        internal: -32603,\n    },\n    provider: {\n        userRejectedRequest: 4001,\n        unauthorized: 4100,\n        unsupportedMethod: 4200,\n        disconnected: 4900,\n        chainDisconnected: 4901,\n    },\n};\nexports.errorValues = {\n    '-32700': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    },\n    '-32600': {\n        standard: 'JSON RPC 2.0',\n        message: 'The JSON sent is not a valid Request object.',\n    },\n    '-32601': {\n        standard: 'JSON RPC 2.0',\n        message: 'The method does not exist / is not available.',\n    },\n    '-32602': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid method parameter(s).',\n    },\n    '-32603': {\n        standard: 'JSON RPC 2.0',\n        message: 'Internal JSON-RPC error.',\n    },\n    '-32000': {\n        standard: 'EIP-1474',\n        message: 'Invalid input.',\n    },\n    '-32001': {\n        standard: 'EIP-1474',\n        message: 'Resource not found.',\n    },\n    '-32002': {\n        standard: 'EIP-1474',\n        message: 'Resource unavailable.',\n    },\n    '-32003': {\n        standard: 'EIP-1474',\n        message: 'Transaction rejected.',\n    },\n    '-32004': {\n        standard: 'EIP-1474',\n        message: 'Method not supported.',\n    },\n    '-32005': {\n        standard: 'EIP-1474',\n        message: 'Request limit exceeded.',\n    },\n    '4001': {\n        standard: 'EIP-1193',\n        message: 'User rejected the request.',\n    },\n    '4100': {\n        standard: 'EIP-1193',\n        message: 'The requested account and/or method has not been authorized by the user.',\n    },\n    '4200': {\n        standard: 'EIP-1193',\n        message: 'The requested method is not supported by this Ethereum provider.',\n    },\n    '4900': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from all chains.',\n    },\n    '4901': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from the specified chain.',\n    },\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ethErrors = void 0;\nconst classes_1 = require(\"./classes\");\nconst utils_1 = require(\"./utils\");\nconst error_constants_1 = require(\"./error-constants\");\nexports.ethErrors = {\n    rpc: {\n        /**\n         * Get a JSON RPC 2.0 Parse (-32700) error.\n         */\n        parse: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.parse, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n         */\n        invalidRequest: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidRequest, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n         */\n        invalidParams: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidParams, arg),\n        /**\n         * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n         */\n        methodNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotFound, arg),\n        /**\n         * Get a JSON RPC 2.0 Internal (-32603) error.\n         */\n        internal: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.internal, arg),\n        /**\n         * Get a JSON RPC 2.0 Server error.\n         * Permits integer error codes in the [ -32099 <= -32005 ] range.\n         * Codes -32000 through -32004 are reserved by EIP-1474.\n         */\n        server: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Ethereum RPC Server errors must provide single object argument.');\n            }\n            const { code } = opts;\n            if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n                throw new Error('\"code\" must be an integer such that: -32099 <= code <= -32005');\n            }\n            return getEthJsonRpcError(code, opts);\n        },\n        /**\n         * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n         */\n        invalidInput: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidInput, arg),\n        /**\n         * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n         */\n        resourceNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceNotFound, arg),\n        /**\n         * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n         */\n        resourceUnavailable: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceUnavailable, arg),\n        /**\n         * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n         */\n        transactionRejected: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.transactionRejected, arg),\n        /**\n         * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n         */\n        methodNotSupported: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotSupported, arg),\n        /**\n         * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.\n         */\n        limitExceeded: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.limitExceeded, arg),\n    },\n    provider: {\n        /**\n         * Get an Ethereum Provider User Rejected Request (4001) error.\n         */\n        userRejectedRequest: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.userRejectedRequest, arg);\n        },\n        /**\n         * Get an Ethereum Provider Unauthorized (4100) error.\n         */\n        unauthorized: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.unauthorized, arg);\n        },\n        /**\n         * Get an Ethereum Provider Unsupported Method (4200) error.\n         */\n        unsupportedMethod: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.unsupportedMethod, arg);\n        },\n        /**\n         * Get an Ethereum Provider Not Connected (4900) error.\n         */\n        disconnected: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.disconnected, arg);\n        },\n        /**\n         * Get an Ethereum Provider Chain Not Connected (4901) error.\n         */\n        chainDisconnected: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.chainDisconnected, arg);\n        },\n        /**\n         * Get a custom Ethereum Provider error.\n         */\n        custom: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Ethereum Provider custom errors must provide single object argument.');\n            }\n            const { code, message, data } = opts;\n            if (!message || typeof message !== 'string') {\n                throw new Error('\"message\" must be a nonempty string');\n            }\n            return new classes_1.EthereumProviderError(code, message, data);\n        },\n    },\n};\n// Internal\nfunction getEthJsonRpcError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new classes_1.EthereumRpcError(code, message || utils_1.getMessageFromCode(code), data);\n}\nfunction getEthProviderError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new classes_1.EthereumProviderError(code, message || utils_1.getMessageFromCode(code), data);\n}\nfunction parseOpts(arg) {\n    if (arg) {\n        if (typeof arg === 'string') {\n            return [arg];\n        }\n        else if (typeof arg === 'object' && !Array.isArray(arg)) {\n            const { message, data } = arg;\n            if (message && typeof message !== 'string') {\n                throw new Error('Must specify string message.');\n            }\n            return [message || undefined, data];\n        }\n    }\n    return [];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeError = exports.isValidCode = exports.getMessageFromCode = exports.JSON_RPC_SERVER_ERROR_MESSAGE = void 0;\nconst error_constants_1 = require(\"./error-constants\");\nconst classes_1 = require(\"./classes\");\nconst FALLBACK_ERROR_CODE = error_constants_1.errorCodes.rpc.internal;\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.';\nconst FALLBACK_ERROR = {\n    code: FALLBACK_ERROR_CODE,\n    message: getMessageFromCode(FALLBACK_ERROR_CODE),\n};\nexports.JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.';\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n    if (Number.isInteger(code)) {\n        const codeString = code.toString();\n        if (hasKey(error_constants_1.errorValues, codeString)) {\n            return error_constants_1.errorValues[codeString].message;\n        }\n        if (isJsonRpcServerError(code)) {\n            return exports.JSON_RPC_SERVER_ERROR_MESSAGE;\n        }\n    }\n    return fallbackMessage;\n}\nexports.getMessageFromCode = getMessageFromCode;\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n */\nfunction isValidCode(code) {\n    if (!Number.isInteger(code)) {\n        return false;\n    }\n    const codeString = code.toString();\n    if (error_constants_1.errorValues[codeString]) {\n        return true;\n    }\n    if (isJsonRpcServerError(code)) {\n        return true;\n    }\n    return false;\n}\nexports.isValidCode = isValidCode;\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n */\nfunction serializeError(error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = false, } = {}) {\n    var _a, _b;\n    if (!fallbackError ||\n        !Number.isInteger(fallbackError.code) ||\n        typeof fallbackError.message !== 'string') {\n        throw new Error('Must provide fallback error with integer number code and string message.');\n    }\n    if (error instanceof classes_1.EthereumRpcError) {\n        return error.serialize();\n    }\n    const serialized = {};\n    if (error &&\n        typeof error === 'object' &&\n        !Array.isArray(error) &&\n        hasKey(error, 'code') &&\n        isValidCode(error.code)) {\n        const _error = error;\n        serialized.code = _error.code;\n        if (_error.message && typeof _error.message === 'string') {\n            serialized.message = _error.message;\n            if (hasKey(_error, 'data')) {\n                serialized.data = _error.data;\n            }\n        }\n        else {\n            serialized.message = getMessageFromCode(serialized.code);\n            serialized.data = { originalError: assignOriginalError(error) };\n        }\n    }\n    else {\n        serialized.code = fallbackError.code;\n        const message = (_a = error) === null || _a === void 0 ? void 0 : _a.message;\n        serialized.message = (message && typeof message === 'string'\n            ? message\n            : fallbackError.message);\n        serialized.data = { originalError: assignOriginalError(error) };\n    }\n    const stack = (_b = error) === null || _b === void 0 ? void 0 : _b.stack;\n    if (shouldIncludeStack && error && stack && typeof stack === 'string') {\n        serialized.stack = stack;\n    }\n    return serialized;\n}\nexports.serializeError = serializeError;\n// Internal\nfunction isJsonRpcServerError(code) {\n    return code >= -32099 && code <= -32000;\n}\nfunction assignOriginalError(error) {\n    if (error && typeof error === 'object' && !Array.isArray(error)) {\n        return Object.assign({}, error);\n    }\n    return error;\n}\nfunction hasKey(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n","import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n","import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n","import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n","/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n","import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n","import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n","/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.1';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n"],"names":["_getInitializedChains","customChains","names","chains","mainnet","ropsten","rinkeby","kovan","goerli","sepolia","chain","name","chainId","toString","EIPs","hardforks","CustomChain","Hardfork","Chain","ConsensusType","ConsensusAlgorithm","opts","_supportedHardforks","_eips","_customChains","_chainParams","setChain","DEFAULT_HARDFORK","defaultHardfork","Istanbul","hf","forkHash","_calcForkHash","_hardfork","supportedHardforks","hardfork","setHardfork","eips","setEIPs","custom","chainParamsOrName","baseChain","standardChainParams","Common","_getChainParams","PolygonMainnet","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","forCustomChain","customChainParams","isSupportedChainId","initializedChains","Boolean","BN","isBN","plainCustomChains","this","length","Array","isArray","map","e","param","undefined","_isSupportedHardfork","existing","emit","getHardforkByBlockNumber","blockNumber","td","toType","TypeOutput","minTdHF","maxTdHF","previousHF","Chainstart","block","gte","msgAdd","hardforkGteHardfork","msg","setHardforkByBlockNumber","_chooseHardfork","onlySupported","_getHardfork","hfs","chainName","eip","minHF","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","topic","value","paramByEIP","paramByHardfork","hfChanges","hfEIPs","valueEIP","v","eipParams","paramByBlock","activeHfs","activeHardforks","hardforkIsActiveOnBlock","hfBlock","hardforkBlockBN","activeOnBlock","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforkIsActiveOnChain","push","activeHardfork","hardforkBlock","Number","hardforkTD","isHardforkBlock","eq","nextHardforkBlock","nextHardforkBlockBN","reduce","acc","gt","isNextHardforkBlock","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","concat","inputBuffer","forkhash","intToBuffer","data","hardforkForForkHash","resArray","filter","genesisState","chainArrayWithGenesis","bootstrapNodes","dnsNetworks","chainIdBN","networkIdBN","consensusType","consensusAlgorithm","consensusConfig","copy","Object","assign","create","getPrototypeOf","removeAllListeners","EventEmitter","module","exports","assert","val","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","number","base","endian","negative","words","red","_init","wordSize","window","require","parseHex4Bits","string","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","len","Math","min","i","move","dest","src","num","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lt","lten","lte","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","nonce","balance","stateRoot","codeHash","KECCAK256_RLP","KECCAK256_NULL","_validate","fromAccountData","accountData","Account","fromRlpSerializedAccount","serialized","values","rlp","decode","fromValuesArray","raw","bnToUnpaddedBuffer","serialize","encode","isContract","equals","isEmpty","isValidAddress","hexAddress","assertIsString","test","toChecksumAddress","eip1191ChainId","assertIsHexString","address","stripHexPrefix","toLowerCase","prefix","keccakFromString","parseInt","toUpperCase","isValidChecksumAddress","generateAddress","assertIsBuffer","nonceBN","rlphash","slice","generateAddress2","salt","initCode","keccak256","isValidPrivate","privateKey","privateKeyVerify","isValidPublic","publicKey","sanitize","publicKeyVerify","pubToAddress","pubKey","publicKeyConvert","keccak","publicToAddress","privateToPublic","publicKeyCreate","privateToAddress","importPublic","zeroAddress","addr","bufferToHex","isZeroAddress","buf","zero","Address","fromString","fromPublicKey","isBuffer","fromPrivateKey","generate","generate2","isPrecompileOrSystemAddress","addressBN","rangeMin","rangeMax","intToHex","isSafeInteger","hex","padToEven","bytes","fill","setLength","setLengthLeft","setLengthRight","stripZeros","first","unpadBuffer","unpadArray","assertIsArray","unpadHexString","Uint8Array","isHexString","bufferToInt","fromSigned","toUnsigned","addHexPrefix","isHexPrefixed","toUtf8","baToJSON","ba","array","validateNoLeadingZeroes","entries","arrToBufArr","arr","bufArrToArr","MAX_UINT64","MAX_INTEGER","TWO_POW256","KECCAK256_NULL_S","KECCAK256_RLP_ARRAY_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_S","createHash","keccak224","keccak384","keccak512","keccakFromHexString","keccakFromArray","_sha256","update","digest","sha256","sha256FromString","sha256FromArray","_ripemd160","padded","ripemd160","ripemd160FromString","ripemd160FromArray","get","getBinarySize","arrayContainsArray","toAscii","fromUtf8","fromAscii","getKeys","superset","subset","some","indexOf","substring","code","String","fromCharCode","stringValue","params","key","allowEmpty","result","match","defineProperties","fields","_fields","label","field","getter","setter","allowZero","allowLess","defineProperty","enumerable","configurable","set","default","alias","d","keys","calculateSigRecovery","vBN","isValidSigRecovery","recovery","rec","msgHash","ecdsaSign","signature","ecrecover","senderPubKey","ecdsaRecover","toRpcSig","toCompactSig","vn","ss","fromRpcSig","sig","isValidSignature","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","hashPersonalMessage","message","outputType","bn","MAX_SAFE_INTEGER","txData","cache","dataFee","activeCapabilities","DEFAULT_CHAIN","Mainnet","gasLimit","to","type","_type","toB","vB","rB","sB","_validateCannotExceedMaxInteger","supports","capability","validate","stringError","errors","getBaseFee","isSigned","verifySignature","fee","getDataFee","common","toCreationAddress","txDataZero","txDataNonZero","cost","dataLength","initCodeCost","getSenderPublicKey","getSenderAddress","sign","_errorMsg","hackApplied","Capability","EIP155ReplayProtection","getMessageToSign","ecsign","tx","_processSignature","splice","_getCommon","cannotEqual","_getSharedErrorPostfix","postfix","BaseTransaction","TRANSACTION_TYPE_BUFFER","accessList","maxFeePerGas","maxPriorityFeePerGas","accessListData","AccessLists","getAccessListData","AccessListJSON","verifyAccessList","N_DIV_2","checkMaxInitCodeSize","freeze","fromTxData","FeeMarketEIP1559Transaction","fromSerializedTx","fromRlpSerializedTx","getDataFeeEIP2930","isFrozen","getUpfrontCost","baseFee","gasPrice","hashMessage","getMessageToVerifySignature","accessListJSON","getAccessListJSON","bnToHex","errorStr","AccessListEIP2930Transaction","yParity","_validateTxV","chainIdDoubled","Transaction","_getMessageToSign","numSub","_unsignedTxImplementsEIP155","_signedTxImplementsEIP155","onEIP155BlockOrLater","txOptions","txType","fromSerializedData","EIP","fromBlockBodyData","getTransactionClass","transactionID","_common","isAccessListBuffer","firstItem","bufferAccessList","isAccessList","newAccessList","item","addressBuffer","storageItems","storageKeys","json","jsonItem","accessListItem","storageSlots","storageSlot","JSONItem","slot","accessListStorageKeyCost","accessListAddressCost","slots","encrypt","version","isNullish","pubKeyUInt8Array","ephemeralKeyPair","nacl","box","keyPair","naclUtil","decodeBase64","err","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","decrypt","encryptedData","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","msgHex","msgBase64","DEFAULT_PADDING_LENGTH","dataWithPadding","modVal","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","concatSig","normalize","getPublicKeyFor","messageHash","legacyToBuffer","recoverPublicKey","sender","SignTypedDataVersion","validateVersion","allowedVersions","join","encodeField","types","V3","V4","encodeData","lastIndexOf","parsedType","typeValuePairs","rawEncode","primaryType","encodedTypes","encodedValues","hashType","encodeType","unsortedDeps","findTypeDependencies","delete","deps","sort","results","Set","has","hashStruct","sanitizeData","sanitizedData","TYPED_MESSAGE_SCHEMA","properties","EIP712Domain","_typedSignatureHash","typedData","error","schema","soliditySHA3","additionalProperties","items","required","domain","TypedDataUtils","eip712Hash","parts","hashBuffer","V1","padWithZeroes","hexString","targetLength","rSig","sSig","vSig","rStr","sStr","vStr","sigParams","buffer","__exportStar","lenbyte","resemblesAddress","processTypedMessageV4","getAccounts","accounts","normalizedAccounts","_address","normalizedAddress","ethErrors","txParams","req","validateAndNormalizeKeyholder","processTransaction","processSignTransaction","extraParams","msgParams","processEthSignMessage","processTypedMessage","processTypedMessageV3","firstParam","secondParam","warning","processPersonalMessage","processEncryptionPublicKey","processDecryptMessage","getPrivateKey","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","mergeMiddleware","eth_syncing","createWalletMiddleware","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","createChainIdMiddleware","createProviderConfigMiddleware","connector","config","chainConfig","chainNamespace","CHAIN_NAMESPACES","skipLookupNetwork","state","enable","setupProvider","_providerEngineProxy","request","method","setupEngine","switchChain","addChain","lookup","currentChainConfig","getChainConfig","displayName","sendCustomRequest","rpcUrls","log","lookupNetwork","WalletInitializationError","WalletLoginError","connectedHexChainId","isHexStrict","providerHandlers","getProviderHandlers","ethMiddleware","createEthMiddleware","engine","createJsonRpcClient","provider","providerFromEngine","onConnectorStateUpdate","payload","rpcUrl","connectedChainId","maybeConfig","txFormatter","finalTxParams","unsignedEthTx","TransactionFactory","signedTx","getProviderEngineProxy","providerEngineProxy","signTx","privKey","txHash","rawMessageSig","signMessage","privKeyBuffer","personalSign","signTypedData","getEncryptionPublicKey","stripped","buff","WalletConnectProvider","providerFactory","BIG_NUMBER_WEI_MULTIPLIER","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","dec","toNormalizedDenomination","WEI","bigNumber","GWEI","ETH","toSpecifiedDenomination","BigNumber","baseChange","conversionUtil","fromNumericBase","numberOfDecimals","convertedValue","converter","toNumericBase","fromDenomination","toDenomination","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","inputBn","inputHex","BnMultiplyByFraction","targetBN","numerator","denominator","numberBN","denomBN","TRANSACTION_ENVELOPE_TYPES","TRANSACTION_TYPES","GAS_ESTIMATE_TYPES","estimates","normalizedEstimates","estimatedBaseFee","normalizeGWEIDecimalNumbers","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","referrer","referrerPolicy","FastGasPrice","TransactionFormatter","providerProxy","init","getCommonConfiguration","isEIP1559Compatible","formatTransaction","clonedTxParams","getDefaultGasLimit","defaultGasLimit","getDefaultGasFees","defaultMaxPriorityFeePerGas","defaultMaxFeePerGas","defaultGasPrice","bnLessThan","fetchEthGasPriceEstimate","getEIP1559Compatibility","latestBlock","supportsEIP1559","fetchGasFeeEstimateData","isLegacyGasAPICompatible","fetchEip1159GasEstimates","EIP1559APIEndpoint","gasData","gasFeeEstimates","gasEstimateType","fetchLegacyGasPriceEstimates","LegacyGasAPIEndpoint","estimateTxGas","gas","analyzeGasUsage","blockGasLimitBN","hexToBn","saferGasLimitBN","estimatedGasHex","blockGasLimit","addGasBuffer","multiplier","initialGasLimitBn","blockGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","determineTransactionCategory","txCategory","transactionCategory","TWENTY_ONE_THOUSAND","bind","chainSwitchMiddleware","updateAccount","network","getChainSwitchMiddleware","chainSwitchHandlers","nativeCurrency","ticker","tickerName","blockExplorer","blockExplorerUrls","chainParams","wallet_addEthereumChain","wallet_switchEthereumChain","createChainSwitchMiddleware","getAccountMiddleware","accountHandlers","updatePrivatekey","accountParams","wallet_updateAccount","createAccountMiddleware","EthereumPrivateKeyProvider","FALLBACK_ERROR","factory","CRC32","T0","table","Int32Array","signed_crc_table","TT","T","subarray","slice_by_16_tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","bstr","seed","L","DO_NOT_EXPORT_CRC","root","f","util","validateBase64","TypeError","unescape","encodeURIComponent","decodeURIComponent","escape","atob","btoa"],"sourceRoot":""}